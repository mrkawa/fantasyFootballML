<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0614.2338                               -->
<workbook original-version='18.1' source-build='2020.2.2 (20202.20.0614.2338)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='res' inline='true' name='federated.0wejjfc0adyo7f1dz85dr0pohmaj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='res' name='textscan.0kgs4bo1fdeo6810vmlph120kgqr'>
            <connection class='textscan' directory='C:/Users/mrkawa/Documents/Berkeley/w207/fantasyFootballML' filename='res.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0kgs4bo1fdeo6810vmlph120kgqr' name='res.csv' table='[res#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Algorithm' ordinal='1' />
            <column datatype='string' name='Type' ordinal='2' />
            <column datatype='string' name='Phase' ordinal='3' />
            <column datatype='string' name='Sub-phase' ordinal='4' />
            <column datatype='string' name='Position' ordinal='5' />
            <column datatype='real' name='MAE' ordinal='6' />
            <column datatype='real' name='RMSE' ordinal='7' />
            <column datatype='real' name='R^2' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0kgs4bo1fdeo6810vmlph120kgqr' name='res.csv' table='[res#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Algorithm' ordinal='1' />
            <column datatype='string' name='Type' ordinal='2' />
            <column datatype='string' name='Phase' ordinal='3' />
            <column datatype='string' name='Sub-phase' ordinal='4' />
            <column datatype='string' name='Position' ordinal='5' />
            <column datatype='real' name='MAE' ordinal='6' />
            <column datatype='real' name='RMSE' ordinal='7' />
            <column datatype='real' name='R^2' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[res.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[res.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[res.csv_C32DF3FE95D2455AA6597C9F13397A09]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Algorithm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Algorithm]</local-name>
            <parent-name>[res.csv]</parent-name>
            <remote-alias>Algorithm</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[res.csv_C32DF3FE95D2455AA6597C9F13397A09]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[res.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[res.csv_C32DF3FE95D2455AA6597C9F13397A09]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phase</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Phase]</local-name>
            <parent-name>[res.csv]</parent-name>
            <remote-alias>Phase</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[res.csv_C32DF3FE95D2455AA6597C9F13397A09]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-phase</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-phase]</local-name>
            <parent-name>[res.csv]</parent-name>
            <remote-alias>Sub-phase</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[res.csv_C32DF3FE95D2455AA6597C9F13397A09]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Position</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Position]</local-name>
            <parent-name>[res.csv]</parent-name>
            <remote-alias>Position</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[res.csv_C32DF3FE95D2455AA6597C9F13397A09]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MAE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MAE]</local-name>
            <parent-name>[res.csv]</parent-name>
            <remote-alias>MAE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[res.csv_C32DF3FE95D2455AA6597C9F13397A09]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RMSE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RMSE]</local-name>
            <parent-name>[res.csv]</parent-name>
            <remote-alias>RMSE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[res.csv_C32DF3FE95D2455AA6597C9F13397A09]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>R^2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[R^2]</local-name>
            <parent-name>[res.csv]</parent-name>
            <remote-alias>R^2</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[res.csv_C32DF3FE95D2455AA6597C9F13397A09]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Position]' role='dimension' type='nominal' />
      <column caption='Rmse' datatype='real' name='[RMSE]' role='measure' type='quantitative' />
      <column datatype='string' name='[Sub-phase]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Downselected, Standardized Features&quot;' value='Base Model' />
          <alias key='&quot;Optimized&quot;' value='Hyperparameter Optimization' />
        </aliases>
      </column>
      <column datatype='string' name='[Type]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='res.csv' datatype='table' name='[__tableau_internal_object_id__].[res.csv_C32DF3FE95D2455AA6597C9F13397A09]' role='measure' type='quantitative' />
      <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
      <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Type:nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Bayesian Ridge&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;KNN&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;MLP&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Kernel Ridge (Linear)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;ElasticNet&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Ridge&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Linear&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Lasso&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Position:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;All&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WR&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;TE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RB&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;QB&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Position:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;WR&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;All&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;RB&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;QB&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;TE&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bayesian Ridge&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lasso&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;KNN&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Random Forest&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MLP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kernel Ridge (Linear)&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Linear&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ElasticNet&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Ridge&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='res.csv' id='res.csv_C32DF3FE95D2455AA6597C9F13397A09'>
            <properties context=''>
              <relation connection='textscan.0kgs4bo1fdeo6810vmlph120kgqr' name='res.csv' table='[res#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Algorithm' ordinal='1' />
                  <column datatype='string' name='Type' ordinal='2' />
                  <column datatype='string' name='Phase' ordinal='3' />
                  <column datatype='string' name='Sub-phase' ordinal='4' />
                  <column datatype='string' name='Position' ordinal='5' />
                  <column datatype='real' name='MAE' ordinal='6' />
                  <column datatype='real' name='RMSE' ordinal='7' />
                  <column datatype='real' name='R^2' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='All'>
      <table>
        <view>
          <datasources>
            <datasource caption='res' name='federated.0wejjfc0adyo7f1dz85dr0pohmaj' />
          </datasources>
          <datasource-dependencies datasource='federated.0wejjfc0adyo7f1dz85dr0pohmaj'>
            <column datatype='real' name='[MAE]' role='measure' type='quantitative' />
            <column datatype='string' name='[Phase]' role='dimension' type='nominal' />
            <column caption='Rmse' datatype='real' name='[RMSE]' role='measure' type='quantitative' />
            <column datatype='real' name='[R^2]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-phase]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Downselected, Standardized Features&quot;' value='Base Model' />
                <alias key='&quot;Optimized&quot;' value='Hyperparameter Optimization' />
              </aliases>
            </column>
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[MAE]' derivation='Avg' name='[avg:MAE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RMSE]' derivation='Avg' name='[avg:RMSE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[R^2]' derivation='Avg' name='[avg:R^2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Phase]' derivation='None' name='[none:Phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-phase]' derivation='None' name='[none:Sub-phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Phase:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Phase:nk]' member='&quot;Season Total + Game Mean Data&quot;' />
                <groupfilter function='member' level='[none:Phase:nk]' member='&quot;Season Total + Play Mean Data&quot;' />
                <groupfilter function='member' level='[none:Phase:nk]' member='&quot;Season Total Data&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Season Total Data&quot;</bucket>
              <bucket>&quot;Season Total + Play Mean Data&quot;</bucket>
              <bucket>&quot;Split by Position&quot;</bucket>
              <bucket>&quot;PCA&quot;</bucket>
              <bucket>&quot;Multioutput&quot;</bucket>
              <bucket>&quot;Opponent Data&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Sub-phase:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sub-phase:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Sub-phase:nk]' member='&quot;Manual Feature Selection&quot;' />
                <groupfilter function='member' level='[none:Sub-phase:nk]' member='&quot;Optimized + Standardized&quot;' />
                <groupfilter function='member' level='[none:Sub-phase:nk]' member='&quot;Standardization&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk]</column>
            <column>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Sub-phase:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:R^2:qk]' field-type='quantitative' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:RMSE:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:MAE:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:R^2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:RMSE:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:MAE:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:R^2:qk] + ([federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:MAE:qk] + [federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:RMSE:qk]))</rows>
        <cols>([federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Sub-phase:nk] / [federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk])</cols>
      </table>
      <simple-id uuid='{0B52B52E-0E6C-4AB7-B1FF-72D37E1256B4}' />
    </worksheet>
    <worksheet name='MAE'>
      <table>
        <view>
          <datasources>
            <datasource caption='res' name='federated.0wejjfc0adyo7f1dz85dr0pohmaj' />
          </datasources>
          <datasource-dependencies datasource='federated.0wejjfc0adyo7f1dz85dr0pohmaj'>
            <column datatype='real' name='[MAE]' role='measure' type='quantitative' />
            <column datatype='string' name='[Phase]' role='dimension' type='nominal' />
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-phase]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Downselected, Standardized Features&quot;' value='Base Model' />
                <alias key='&quot;Optimized&quot;' value='Hyperparameter Optimization' />
              </aliases>
            </column>
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[MAE]' derivation='Avg' name='[avg:MAE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Phase]' derivation='None' name='[none:Phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-phase]' derivation='None' name='[none:Sub-phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Season Total Data&quot;</bucket>
              <bucket>&quot;Season Total + Play Mean Data&quot;</bucket>
              <bucket>&quot;Split by Position&quot;</bucket>
              <bucket>&quot;PCA&quot;</bucket>
              <bucket>&quot;Multioutput&quot;</bucket>
              <bucket>&quot;Opponent Data&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:MAE:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' />
              <lod column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:MAE:qk]</rows>
        <cols>([federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk] / [federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Sub-phase:nk])</cols>
      </table>
      <simple-id uuid='{FBFAC994-DB22-4087-BBE0-DA8513605DF1}' />
    </worksheet>
    <worksheet name='QB'>
      <table>
        <view>
          <datasources>
            <datasource caption='res' name='federated.0wejjfc0adyo7f1dz85dr0pohmaj' />
          </datasources>
          <datasource-dependencies datasource='federated.0wejjfc0adyo7f1dz85dr0pohmaj'>
            <column datatype='real' name='[MAE]' role='measure' type='quantitative' />
            <column datatype='string' name='[Phase]' role='dimension' type='nominal' />
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column caption='Rmse' datatype='real' name='[RMSE]' role='measure' type='quantitative' />
            <column datatype='real' name='[R^2]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-phase]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Downselected, Standardized Features&quot;' value='Base Model' />
                <alias key='&quot;Optimized&quot;' value='Hyperparameter Optimization' />
              </aliases>
            </column>
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[MAE]' derivation='Avg' name='[avg:MAE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RMSE]' derivation='Avg' name='[avg:RMSE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[R^2]' derivation='Avg' name='[avg:R^2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Phase]' derivation='None' name='[none:Phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-phase]' derivation='None' name='[none:Sub-phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Phase:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Phase:nk]' member='&quot;Season Total + Game Mean Data&quot;' />
                <groupfilter function='member' level='[none:Phase:nk]' member='&quot;Season Total + Play Mean Data&quot;' />
                <groupfilter function='member' level='[none:Phase:nk]' member='&quot;Season Total Data&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Season Total Data&quot;</bucket>
              <bucket>&quot;Season Total + Play Mean Data&quot;</bucket>
              <bucket>&quot;Split by Position&quot;</bucket>
              <bucket>&quot;PCA&quot;</bucket>
              <bucket>&quot;Multioutput&quot;</bucket>
              <bucket>&quot;Opponent Data&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk]'>
            <groupfilter function='member' level='[none:Position:nk]' member='&quot;QB&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Sub-phase:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sub-phase:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Sub-phase:nk]' member='&quot;Downselected, Standardized Features&quot;' />
                <groupfilter function='member' level='[none:Sub-phase:nk]' member='&quot;Manual Feature Selection&quot;' />
                <groupfilter function='member' level='[none:Sub-phase:nk]' member='&quot;Optimized + Standardized&quot;' />
                <groupfilter function='member' level='[none:Sub-phase:nk]' member='&quot;Standardization&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk]</column>
            <column>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Sub-phase:nk]</column>
            <column>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:R^2:qk]' field-type='quantitative' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:RMSE:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:MAE:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:R^2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:RMSE:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:MAE:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk] * ([federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:R^2:qk] + ([federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:MAE:qk] + [federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:RMSE:qk])))</rows>
        <cols>([federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Sub-phase:nk] / [federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk])</cols>
      </table>
      <simple-id uuid='{F202DFA0-81D5-4BF6-9BC4-F65F6D68A323}' />
    </worksheet>
    <worksheet name='RB'>
      <table>
        <view>
          <datasources>
            <datasource caption='res' name='federated.0wejjfc0adyo7f1dz85dr0pohmaj' />
          </datasources>
          <datasource-dependencies datasource='federated.0wejjfc0adyo7f1dz85dr0pohmaj'>
            <column datatype='real' name='[MAE]' role='measure' type='quantitative' />
            <column datatype='string' name='[Phase]' role='dimension' type='nominal' />
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column caption='Rmse' datatype='real' name='[RMSE]' role='measure' type='quantitative' />
            <column datatype='real' name='[R^2]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-phase]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Downselected, Standardized Features&quot;' value='Base Model' />
                <alias key='&quot;Optimized&quot;' value='Hyperparameter Optimization' />
              </aliases>
            </column>
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[MAE]' derivation='Avg' name='[avg:MAE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RMSE]' derivation='Avg' name='[avg:RMSE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[R^2]' derivation='Avg' name='[avg:R^2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Phase]' derivation='None' name='[none:Phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-phase]' derivation='None' name='[none:Sub-phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Phase:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Phase:nk]' member='&quot;Season Total + Game Mean Data&quot;' />
                <groupfilter function='member' level='[none:Phase:nk]' member='&quot;Season Total + Play Mean Data&quot;' />
                <groupfilter function='member' level='[none:Phase:nk]' member='&quot;Season Total Data&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Season Total Data&quot;</bucket>
              <bucket>&quot;Season Total + Play Mean Data&quot;</bucket>
              <bucket>&quot;Split by Position&quot;</bucket>
              <bucket>&quot;PCA&quot;</bucket>
              <bucket>&quot;Multioutput&quot;</bucket>
              <bucket>&quot;Opponent Data&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk]'>
            <groupfilter function='member' level='[none:Position:nk]' member='&quot;RB&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Sub-phase:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sub-phase:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Sub-phase:nk]' member='&quot;Downselected, Standardized Features&quot;' />
                <groupfilter function='member' level='[none:Sub-phase:nk]' member='&quot;Manual Feature Selection&quot;' />
                <groupfilter function='member' level='[none:Sub-phase:nk]' member='&quot;Optimized + Standardized&quot;' />
                <groupfilter function='member' level='[none:Sub-phase:nk]' member='&quot;Standardization&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk]</column>
            <column>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Sub-phase:nk]</column>
            <column>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:R^2:qk]' field-type='quantitative' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:RMSE:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:MAE:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:R^2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:RMSE:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:MAE:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk] * ([federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:R^2:qk] + ([federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:MAE:qk] + [federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:RMSE:qk])))</rows>
        <cols>([federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Sub-phase:nk] / [federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk])</cols>
      </table>
      <simple-id uuid='{375F8517-9CF6-4F4F-9F61-C89F090D464A}' />
    </worksheet>
    <worksheet name='RMSE'>
      <table>
        <view>
          <datasources>
            <datasource caption='res' name='federated.0wejjfc0adyo7f1dz85dr0pohmaj' />
          </datasources>
          <datasource-dependencies datasource='federated.0wejjfc0adyo7f1dz85dr0pohmaj'>
            <column datatype='string' name='[Phase]' role='dimension' type='nominal' />
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column caption='Rmse' datatype='real' name='[RMSE]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-phase]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Downselected, Standardized Features&quot;' value='Base Model' />
                <alias key='&quot;Optimized&quot;' value='Hyperparameter Optimization' />
              </aliases>
            </column>
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[RMSE]' derivation='Avg' name='[avg:RMSE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Phase]' derivation='None' name='[none:Phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-phase]' derivation='None' name='[none:Sub-phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Season Total Data&quot;</bucket>
              <bucket>&quot;Season Total + Play Mean Data&quot;</bucket>
              <bucket>&quot;Split by Position&quot;</bucket>
              <bucket>&quot;PCA&quot;</bucket>
              <bucket>&quot;Multioutput&quot;</bucket>
              <bucket>&quot;Opponent Data&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:RMSE:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' />
              <lod column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:RMSE:qk]</rows>
        <cols>([federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk] / [federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Sub-phase:nk])</cols>
      </table>
      <simple-id uuid='{EB523929-C3F8-40DF-86F6-AB85FBBF7AB7}' />
    </worksheet>
    <worksheet name='R^2'>
      <table>
        <view>
          <datasources>
            <datasource caption='res' name='federated.0wejjfc0adyo7f1dz85dr0pohmaj' />
          </datasources>
          <datasource-dependencies datasource='federated.0wejjfc0adyo7f1dz85dr0pohmaj'>
            <column datatype='string' name='[Phase]' role='dimension' type='nominal' />
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column datatype='real' name='[R^2]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-phase]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Downselected, Standardized Features&quot;' value='Base Model' />
                <alias key='&quot;Optimized&quot;' value='Hyperparameter Optimization' />
              </aliases>
            </column>
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[R^2]' derivation='Avg' name='[avg:R^2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Phase]' derivation='None' name='[none:Phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-phase]' derivation='None' name='[none:Sub-phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Season Total Data&quot;</bucket>
              <bucket>&quot;Season Total + Play Mean Data&quot;</bucket>
              <bucket>&quot;Split by Position&quot;</bucket>
              <bucket>&quot;PCA&quot;</bucket>
              <bucket>&quot;Multioutput&quot;</bucket>
              <bucket>&quot;Opponent Data&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk] * [federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:R^2:qk])</rows>
        <cols>([federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk] / [federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Sub-phase:nk])</cols>
      </table>
      <simple-id uuid='{32A4B94B-CD1E-4008-B2AB-686828FFE2D1}' />
    </worksheet>
    <worksheet name='TE'>
      <table>
        <view>
          <datasources>
            <datasource caption='res' name='federated.0wejjfc0adyo7f1dz85dr0pohmaj' />
          </datasources>
          <datasource-dependencies datasource='federated.0wejjfc0adyo7f1dz85dr0pohmaj'>
            <column datatype='real' name='[MAE]' role='measure' type='quantitative' />
            <column datatype='string' name='[Phase]' role='dimension' type='nominal' />
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column caption='Rmse' datatype='real' name='[RMSE]' role='measure' type='quantitative' />
            <column datatype='real' name='[R^2]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-phase]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Downselected, Standardized Features&quot;' value='Base Model' />
                <alias key='&quot;Optimized&quot;' value='Hyperparameter Optimization' />
              </aliases>
            </column>
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[MAE]' derivation='Avg' name='[avg:MAE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RMSE]' derivation='Avg' name='[avg:RMSE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[R^2]' derivation='Avg' name='[avg:R^2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Phase]' derivation='None' name='[none:Phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-phase]' derivation='None' name='[none:Sub-phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Phase:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Phase:nk]' member='&quot;Season Total + Game Mean Data&quot;' />
                <groupfilter function='member' level='[none:Phase:nk]' member='&quot;Season Total + Play Mean Data&quot;' />
                <groupfilter function='member' level='[none:Phase:nk]' member='&quot;Season Total Data&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Season Total Data&quot;</bucket>
              <bucket>&quot;Season Total + Play Mean Data&quot;</bucket>
              <bucket>&quot;Split by Position&quot;</bucket>
              <bucket>&quot;PCA&quot;</bucket>
              <bucket>&quot;Multioutput&quot;</bucket>
              <bucket>&quot;Opponent Data&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk]'>
            <groupfilter function='member' level='[none:Position:nk]' member='&quot;TE&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Sub-phase:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sub-phase:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Sub-phase:nk]' member='&quot;Downselected, Standardized Features&quot;' />
                <groupfilter function='member' level='[none:Sub-phase:nk]' member='&quot;Manual Feature Selection&quot;' />
                <groupfilter function='member' level='[none:Sub-phase:nk]' member='&quot;Optimized + Standardized&quot;' />
                <groupfilter function='member' level='[none:Sub-phase:nk]' member='&quot;Standardization&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk]</column>
            <column>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Sub-phase:nk]</column>
            <column>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:R^2:qk]' field-type='quantitative' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:RMSE:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:MAE:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:R^2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:RMSE:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:MAE:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk] * ([federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:R^2:qk] + ([federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:MAE:qk] + [federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:RMSE:qk])))</rows>
        <cols>([federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Sub-phase:nk] / [federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk])</cols>
      </table>
      <simple-id uuid='{57BD2323-6C8A-4157-B75F-6494D7660A3E}' />
    </worksheet>
    <worksheet name='WR'>
      <table>
        <view>
          <datasources>
            <datasource caption='res' name='federated.0wejjfc0adyo7f1dz85dr0pohmaj' />
          </datasources>
          <datasource-dependencies datasource='federated.0wejjfc0adyo7f1dz85dr0pohmaj'>
            <column datatype='real' name='[MAE]' role='measure' type='quantitative' />
            <column datatype='string' name='[Phase]' role='dimension' type='nominal' />
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column caption='Rmse' datatype='real' name='[RMSE]' role='measure' type='quantitative' />
            <column datatype='real' name='[R^2]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-phase]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Downselected, Standardized Features&quot;' value='Base Model' />
                <alias key='&quot;Optimized&quot;' value='Hyperparameter Optimization' />
              </aliases>
            </column>
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[MAE]' derivation='Avg' name='[avg:MAE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RMSE]' derivation='Avg' name='[avg:RMSE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[R^2]' derivation='Avg' name='[avg:R^2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Phase]' derivation='None' name='[none:Phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-phase]' derivation='None' name='[none:Sub-phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Phase:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Phase:nk]' member='&quot;Season Total + Game Mean Data&quot;' />
                <groupfilter function='member' level='[none:Phase:nk]' member='&quot;Season Total + Play Mean Data&quot;' />
                <groupfilter function='member' level='[none:Phase:nk]' member='&quot;Season Total Data&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Season Total Data&quot;</bucket>
              <bucket>&quot;Season Total + Play Mean Data&quot;</bucket>
              <bucket>&quot;Split by Position&quot;</bucket>
              <bucket>&quot;PCA&quot;</bucket>
              <bucket>&quot;Multioutput&quot;</bucket>
              <bucket>&quot;Opponent Data&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk]'>
            <groupfilter function='member' level='[none:Position:nk]' member='&quot;WR&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Sub-phase:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sub-phase:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Sub-phase:nk]' member='&quot;Downselected, Standardized Features&quot;' />
                <groupfilter function='member' level='[none:Sub-phase:nk]' member='&quot;Manual Feature Selection&quot;' />
                <groupfilter function='member' level='[none:Sub-phase:nk]' member='&quot;Optimized + Standardized&quot;' />
                <groupfilter function='member' level='[none:Sub-phase:nk]' member='&quot;Standardization&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk]</column>
            <column>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Sub-phase:nk]</column>
            <column>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:R^2:qk]' field-type='quantitative' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:RMSE:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:MAE:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:R^2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:RMSE:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:MAE:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk] * ([federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:R^2:qk] + ([federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:MAE:qk] + [federated.0wejjfc0adyo7f1dz85dr0pohmaj].[avg:RMSE:qk])))</rows>
        <cols>([federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Sub-phase:nk] / [federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk])</cols>
      </table>
      <simple-id uuid='{EF06E603-5100-4BAC-AB1B-EA2DF4E412A2}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='All'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk]</field>
            <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk]</field>
            <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Sub-phase:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4DD0655A-A6BA-408B-9CB5-B251ACE8FB04}' />
    </window>
    <window class='worksheet' name='QB'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk]</field>
            <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk]</field>
            <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Sub-phase:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6B3B79A8-A274-45A9-AD51-AA5CF7A65EF4}' />
    </window>
    <window class='worksheet' maximized='true' name='RB'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;RB&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk]</field>
            <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk]</field>
            <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Sub-phase:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A847316-F64E-45BA-9E18-A814F5D6BCA5}' />
    </window>
    <window class='worksheet' name='WR'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;WR&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk]</field>
            <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk]</field>
            <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Sub-phase:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{279CAFFE-202E-4204-8EF8-1052A4D34D4D}' />
    </window>
    <window class='worksheet' name='TE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;TE&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Phase:nk]</field>
            <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk]</field>
            <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Sub-phase:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2B532D40-AD09-46EA-8946-52D1A9C7B3B4}' />
    </window>
    <window class='worksheet' name='R^2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk]</field>
            <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C8234E3E-9C80-44BA-8E8B-0A7D2DD0C482}' />
    </window>
    <window class='worksheet' name='MAE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[attr:Position:nk]</field>
            <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk]</field>
            <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8EE3F133-4C09-4EA8-BD70-A0E32EE22575}' />
    </window>
    <window class='worksheet' name='RMSE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Position:nk]</field>
            <field>[federated.0wejjfc0adyo7f1dz85dr0pohmaj].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0385E3B5-9AA4-4DE1-AA17-1DD853734B19}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='All' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9Z5BcyZWo911/y7f3QMMOvLczGD8cDj25JHe53H1crnb3vVA8RWh/SAop
      Qr8VipBCoZAJ7Qu91dunFR/J4dIOOUMOh2Y8ZjDAwHtv2tvy12WmflShAcwA3Q10N7oB1BdR
      Xbdv3bqZVXVO5smTJ09qSilFjRqPKPp8V6BGjfmkpgA1HmnmRQGy2ex8FFvjEaJYLBKG4ZTX
      zYsC+L4/H8XWeIQIwxAp5ZTX1Uyg+46g78olLl/tIRBT/0AApdwYBS8EJRkZHia8zfv8cpmb
      z3qlEpGs+TemoqYA9x2fS5f6EaUBTl0cmdY7+k4d4ejlPoRf5I9vvUmh9OmuvffSJYKb/r96
      7izFUMxSnR9ezPmuwKPI+FAfXpRm+abHOPHR25y42M/m3U9x+tBempZupsvN8eGRc7Su2MKe
      Tcuxk40YQZaxkTKZlkVEhQHeeP8MUrPZtm0ZRz4+TaGsiDe4vPHex1iNS1haX/tpp0PtW5oH
      lqzdyvIui2MX+hDSors9yUhesnzZcgZzY/SODdG57DEyKbfyBs2gKQ4nrhbpbEngZwdpXbOb
      zOgJBkfHWLp5D0HvGcaG+km2LqGlPoOIivP7IR8QaibQfcckP3iOvYcusXhZF40pBz3ZRmeD
      i1cqUNfYwtr1mwgL4+imBUC6sZHORZ20NrfR2thMw+J1aINHGTYbWLFoKSPn9pNXNt3L15LQ
      SoSaQXNLK45R+3mnQpuPmeDBwUFaWlrud7E1HiHGx8eJxWI4jjPpdbeYQNls9r64KPP5/JyX
      UePRplwuUyqVMM3JrfxbXs1kMnNaqZup9QA15pLp9gA1I7HGI80D5wUSQ2cQl98FpcCKgVbV
      YcNG0yuDRiwH9MpH03QTjEoroNkxJnTetKF6vWbeuH7iftePNa1yqOmAdmtlbnr9U2i3a1s0
      0O/Q5mjGHW5z+/MPI0oppJIIGSGVAhSuFZvTMh84BZBjF4kuvA0oVOQD1TG8jEBWJn4q56so
      ASKqHvoVxfnE9cjKLCsAhn1DeHXzhiIZFnxSGPXbnKtcjWa5tzmtoxn27T+YeYfrTXuiLpqd
      glgdmp1Ei9ej2Sk0N41mxsCKodlxsOJodgJtjgVnOkgl8SMfP/Ioh2VCEeBHPqWgRCkoUApL
      FPw8OS9HKSxS8Av4kUcpKCJEQNxO8PfP/nek3bkzzR84BTBXvoi54oXKP1IwoQBKVoVb3RBs
      Kq0KStx0/fUXxA1luOlYhd6N60WIEtX5VRGAjAhFSCRD/NBDRh7IiHJYJoh8hBR4kVe5T1Ak
      ED5+5BPJiEhERJGHijxCERAInyAKrtceZ6JuqloVhYbCqiqmrhQxJUhIQUxJUkoQk5KYkmiG
      iaZb6IaFpptoho1uumC5aLEGNKeqKE4KLd6IZsXBzaA5aTQ3heZkCKw4th0DNBQaaJUaVHq9
      yvfqRz5B5FMKihT8HAU/TzkokvOy+JFHUB4nCMv45XEiP0fg57BFACJCEwG2CDFlgBEFWEpi
      o7CUol1VPoetFDaVZ0dJtEQLsbAMNQW4gabpt7bQU10/y+VfLzE1S/cLogChBH7oEQi/chz5
      RCIiqCpKGIWMjfYTioBhJcDQCWQAhkEkArSwhKsEelBED8rERIAZlpBhiUTk4/h5nLHL2DIg
      IUI0EWIqgV491pWA0COPhm+YBGYMaTp4hoWyEwSRj4w8Ij+PrSQG4CpJvVK0KomjFBYSQzcr
      v01VCdHNiqmp6RVT1IqBkUKzEqAbaE6qYrpaMXBSaKZb6TnNGJrloiVaMFNts/RN355ZVYDh
      q6c5fPoKHSu3sKa7CQA/N8Qf9p3gxeefwawNuT+FXTVxYpOYLNmhPn79vR8hRYRuGOimhW4Y
      WJZDzLIwbQfbjWG7reiGge3GsdMxbDdemUwzdQzbRrdtPMPAsUw008CxDExdQ5cSojIxP4/y
      c6jyGMovorwxVGmsKrxupeew4pVxiZNCs2IV4bXiaNUep6IAVtVkNCsCrulgWJVjw7pfX+20
      mFUF6B0p88wLL3D08BHobkIpycVL10inYyhVMUeuP6YTqlqjQizZwONf/Fui0EMhCYMyUkb4
      5SJShEgZEfplAq+MFIKxgV6i0CcolxFRWPnOpURJceNYKZQUaLqBadsVJXJiWI6D6bg4sQS2
      24xpd2FaDgRAAJbjVAb+JbCcyrhFw8dyACrmn2E56NXBvuk4aNV++Pr1aBqWfcM9qek3Oxu0
      qsMBDNPEjiXu6TubrpzNrgmk6ejadZsRCr0nOdOXR5YGGV65gdaMM2MFCEo+VsxGu5P35SHk
      8CsfMnDqGjKqjBN008B0THTLxLAMTNvBdOpIuDZ2xsVsNrETLnbMxnBMdEND0xUKiWHpaIZC
      0yEKAyLfryiLVyYKfKLAJ/Q9/HIJr1hAjI8SRTeiT0UYoqq/rwgq4yOFQoQ3YlFFFKGqYxcR
      VhQQKuVV3qAQN91TN4yJ31PTDfSqYyHd3MZn/vrvce5BCa7L2H1VgKYE/P6NN2hZsp7RoT7s
      uqU8vauT06eOk47bE62CrutTztDdjtzIIO//f7+krqGbHd9+FsN64IYwd4VSiv6TVxk628vO
      v3yWdGsdURAhggi/6BGWAyIvJCh5BCWf0Avxc2WKQUhQ9CuvByFo1TZY0yoNraZhmAaGZeAk
      XKyYg+VaWLEkiYSLETewu1ws18ZNxXCSLrqpVwWViYGVukm4bhY0dd0Z8YlrlJQTg/6bz0eh
      j6quXZAimlAO240TT6bvqbHTdR3DMO5uJnimdKzYSMeKjZ84G2fX7j2zcv+gXGJw8DDeEJx/
      7yQrn1n/UPcExZE8R1/9iGW7V9OyouOe7iGlJPJDIi8k8kNCLyAoB4TlABHeUKTQCyiO5hm7
      OoSIBCKIEKEgCirvNV2LeH2SeF2CWF3lOdmcwUnGsOM2biqO/gAG3z1QTWhD+yJe/Nt/S/Zq
      gbNvH6V5RTv1XU3zXa05QQrB8d8cwE3GWPnM+nu+j67r2DEHOzZ5SMB1lFLISCAjiRQCEQpC
      L8DLlymNFSiO5CiO5Bk610tpvIiSCtOxsOM2dtwl1Zwh0Zgi3pAkXpck2ZjGit1h7mMB8EAp
      gG4YtC9fTdtSSXk04OBP3ufJf/PStH/cm6nMOt78kERS3nIukhIhJaEQRFISCIFjmsQtC0PX
      sXQDQ9cwNB3LMDB1fVZ6JKUU598/xdiVIfb865fuq6mnaRqGZfJJZ02m/UbdblQUvHyJ0niR
      /OA45fEipbECfcevVHoWL0AEEaZjEatLkGxKE69LkmhKk2hI4qbimI6F5doY1vzMeD9QCgAg
      pKQchrQ/tZrLP3iTD98+xKKdK4mkJJICP4oIhSAQglBWniMh8aKwcq563ouiCYEX1wVdCoS8
      oQxR1VtiGgampmMZOr6olGHoOo5hYhk6ZvXYMSuPmGkRs248EraDW30tbllYeuXZMU2M24RG
      5PrHOP/OcVa/uJlU8/0LUJwOtyi4BrFMglgmQWP3rcGNoR/iF8qEJZ9yrkxxJEdhKEu2f5T+
      U9cojRdAKey4g51wcVNx4nUJEk3piqmVSRCrS2DH775xuxseOAXYe+USfzh/FgC52kWGg2gf
      DGM6FlplAhNTN7ANA8uoPJu6jmtZ2LqB6zhYhoFrWhOvXb/uk+dcy6q06mjVe2uoas8QSkEx
      CCiHYeURhRQCn3IY4kURed+nv5DHjyKKQYBQsuIKRkH1WSmq5Zik7Eq9krZD8fIwYZdDqtkk
      29eDe5NCOYaJrmnouoauaWhoGJqGrl/3wC0MLMfCcixohPrqucqsvEIKiRQSv+hRHM5TGi9Q
      HM1TGiswfLGfoBygpCJen+Tx7z6PHb9NmMgs8cAtiCmFAYOFAoZeaXn7D17k4geneOqvXyTd
      kMa+yaW2kAirPUc5CglFpQcqh2GlNworyhMIwbkjF4gcnXhrhlDKm3q0CC+KUEphmya2YeAY
      JqauY1d7HcvQcU0L17KImSa2UelpYpZ9S4NwXcnt6jXmnQL05gkRRpRzJZSQpFrq7uke97Qg
      5pMoJRkbGkBPNFCX0Onvz9HW1nhPFZot4pbNkvqGif+bd62leKafc78+yM6/eGZBCj9UWnrL
      MEje4QdRSjF8oR9O5dn89SdoXbNoYhxSiZCsjkmUrPYyIV4Y4YuKIpXCgEBUlGmsVKI3Cgmi
      iFK1hwqlwKjO0+iaVrH1qz2JbZjVXvFW8801LdyqmaahYZsVO11HwzIqx4auYd0UEOhU3Y4a
      YN/kgrQMA51KedYdIlwrP50Gho5bn5z1MJbbMakCFAbP87Nfvo+uQl745pc5+M5Jvvqnz96H
      ak0f07HY8vUnePvfvfZAu0a9XJnDr3zIoq3L6VjXDYABE4I2U66Pffyo0pN4VVPNiyrPoRAT
      iuQLQa6Qx4sigihCVs02UZ3cUp84luomn/5N/n1RPVaAqPr5Faoa6lzBvunzWfqN3ts2DBri
      cf5i0zYS9tx5kSZVAMO0aV60ghd2LeHll79P2Vw9ZxWZCYmGFOte2sax3xygcWnrpwZkCx0l
      FWf+eARd01j1/KY5KeN6DxS37k6YhJQT45ZoInpW3VYZKtffEPSbFUBen+i6WQGUwq+GqgOE
      Qk68FohowrEwl0w6BlBKEXolrl68RsuKJQgvpC6dnHGhc7EoXgrJoZ/vZbxnhCf/7qU59x7M
      Jj1HL3H4Fx+w8y+epXFp6wPZgy00ZmVJpJ/v56c//hnDoU7cdmZF+OcK3dBZ99JWlFScfOPg
      LVPtC5nCcI7jvznA8j1ra8I/D0yqAFYsw5LOBnqu9BBNduECwUnG2Py13fQcvUTP0UvzXZ0p
      EWHEsVc/Il6XYOVT62rCPw9MqgCG6bJ05WpWLuuCsMSZc5fvV73umYbuFlY+tZ5jr+2nNFaY
      7+pMypUD5xjrGWbjl3ehm4/O2t+FxKQKUBi5xBtvH2To0j7+z//jP5KTCzem4zqaprHsidWk
      Wuo49PMPiPypc8TPB9n+MU7/8QhrXtxCqvXefN01Zs7kY4BSHhEAloVppIibD0a6bcMy2fqn
      T5IbGOPMW0eZh7m+SQnKAUd+8QGNS9tYvHVFzfSZRyb1MWVal7N7p0kEtHZC4h6CzuYLNxVj
      3ee2ceQXH9CysoOmpXO7tvRuOPvmEcq5Etu/9fQDGUL8MDGpAphOklXr1lX/kwTB5PnmpYgo
      FErEk0lMQ0cphVcqECqDVCJ2X1s6TdPo2riU0StDHP7FB+z5m8/ipuP3rfw7MXJ5kIv7zrDl
      G3twM/Nfn0edu2h+PE4cvTDpFZdPHebEqeMcPHEJABXmOHH8DMf2fchg+f5v1qDpGms/uwVd
      1znx+sfIae7IMld4+TJHXvmQ7u0r6Vi7uGb6LACmMc0mKeQKRFKyfFUXUqk7Rh0WpM2uXVs5
      dPgwAJqVZtOm1Zw8eYGkrSOEQEqJEIIgCG57j1lHh7Vf2s7+771Jw6FWOjZ0359yP4FSihOv
      H0BEghXPriOMFubg/GFBCEEYhlM2MtNQgBI/+qd/pmlRHYePnGXnF/+Ol3Ysuv2lUYAX+EhR
      LVT6nDp9kRXr1hGr5kQxDAPDMLDnML7jk7Qu62DV85s4+fpBGrqaSc+D1+XqoQv0nbjKru88
      TyxRM33mGsMwsCxrSjmbhglkEItVbtS9ajnl4fE7XrlkUQsf7f2Q1sXLGB3qo5wf5VrfAB++
      9zbDxfndr2rprtXUdTRw9Jcf3nfXaHE0z8nfHmTFk2sfuDilh51prAco8+av/oDW1MbWjeuJ
      OxbGDD0X87VBRjlb5O1/eI3F21ew+oXN98UGF2HEgR+9S+gF7P7uCxi1Ca/7wiymR4+xbfcm
      rh15i395ff+MhX8+iWUSbPjSTi68f4qRiwP3pcxL+84wemWQjV/ZVRP+Bcg0pLnI279/j8Wb
      X+CrL2ye+xrNMe1rF9G1aSmHX/kAL1ea07LGe0c4/ccjrHpuI8mm9JyWVePemFQBlFJkR3K0
      dLVw8qN3+HAKN+iDgKbrrP/CdjRN59iv98+ZazQoBxz91T5aVnTQvX1lzeW5QJlUAbL9R/lf
      /ud/j+/U05Ds5Jkn7j0/zULCsEw2fW03g2d6uXbk4qzfXynF+XePUx4vse7z22qBbguYSRUg
      07aB//K/+HMGzx/l3NUzHJgDYZkvGhY389hzGzj+6/3kBu7s2boXhs73cfGD02z66q4FMftc
      485MOyuEUoJyOSQ+CykqFso2qVJIDrz8Dn7JY/d3nsd0Zp6628uVeP+f3qBpaRvrv7RjIh9q
      jfvLrG+Sp2nGrAj/QkI3dNZ/cTvl8SJn3z424/tJITn1+8NomsbqFzfXhP8B4JH/hSqu0R1c
      /OA0A2d6ZnSvniMX6T1+mY1f2XVP6Rpr3H8eeQUAaH2si+4dKznyyoeUs8V7ukdxJM/JNw6x
      4sm1NCyef/OuxvSoKQCVqNFVz2/Citkc/dVHd+0ajYKQo699RKolw/I969D0msvzQaGmAFVM
      22Tz13YzfLGfy/vP3tV7L390lvFrw6x9aeu8ZTmucW/UFOAmMh2NrH1pKyffOMh4z8i03jPe
      M8LpPxxh9Wc2k26rn/oNNRYUNQW4CU3TWLxtBU1LWznyq32E3uRrFsJywOFffEDLYx0s2rK8
      Ntv7AFJTgE+g6zobvrQTP1/m9B+P3HFBvZKKc+8eJyj7rP/Cjlqg2wNKTQFuQyyTYOOXd3L5
      o7P0n7p622uGzvdx8cPTrHtpG27qznv81ljY1BTgDrQ81snibSs49tr+T7lGvUKZY69+ROeG
      JbStucPquBoPBLOqAFdPfcwbb7zO/hNXAJBhgT++/hteff1NStGDkavzOpqmsfazW3FTMY68
      8uGEa1QKybFX96MZOmtf2lpLa/KAM6u5p8cCkxde/CyHDx0CFiPHr9Ky8XkW+WfoKwiWpCqb
      ZIdhSLFYaVWVUgghKlv8VEMHrp/TNA3jpvzxURR96pwQld3Pb94P9nbnrm+abNy0g8x0yl7+
      3HoOfP9tLn54iub1XeQujTBw5hqb/vQJyoFHyS/Petk3n7vT546iSrbWWtm3L7tQKKBp2sT1
      d7rXrCqAJgSREChV3fXbsAiLHp4vsU0mPpxpmrjugxFX5C7rYMMXd3Lytx9juhanf3eY5U+s
      oX1l13xXrcYkxONxHMfBsiYPcJxVBehqTfPeW2+zePUWRof6iGUWIU/u5aRRx56V5kQr8ElN
      XOh0b1vB4JkeDv/sAxq6W1jx5LoHqv6PInp1y9qpfqcHbpO8+cLLlTj//kmW7HyMRENqvqtT
      YwpmZZO8Gjdw03HWfW7bfFejxixTc2HUeKS5pQfIZrP4vj/nhebz+Tkvo8ajTblcplQq3eIZ
      uh23vJrJZOa0UjfzoI0BajxYzPqSyBo1HkZqClDjkaamADUeaWoKUOORpqYANR5pagpQ45Gm
      pgA1HmlqoRA1PoWSEq+Yp+fscfounKI4Poqm65iWja4bGJZVeTYtdNNAN0wM08K0HTRNu/Ua
      y0LXdQzLwTRNdMMETcOyK/55qxoVbNkuumFgWJUtjTQ00DSMKSayZkpNAWoAFaHPjQ4xcPEM
      l47up//iaWw3RuuSx2jqXIJSkigMULLyHEUBvldCRhFSRIgoIgp8lFIoJZFCgFJIWYnVl0Kg
      pEQpCQqEqMTpy+qziCKUkigpK1Gclk2mqZXP/5v/FieemLPPXVOARxgpBbnhQXrPHufqqcMM
      Xb2I5bi0L1/NU3/2d8iGFs6XSvRFEV2ZerpSKVqTqTvuEnodJeUtgg+VZykrAg63Cv71/yfe
      V1UyJ57Ejs1tdu2aAjxihL5HdqiPKycOcenYAQpjwyTrm+h8bD1bPvNVnOZ2zo2N8vq1K/T2
      H6crU0fMMjkxOIAXhSgFbakUXZk6FtfV05ZMkbQdXMuaUAxN1zGur+yaecLtOaWmAI8AIooY
      unqBqycPc+30EcaH+qhv7WTJ+m10Praexs4lDJSLfNTby7GPPmC8nGVpfZJnljTQGbcJhM/a
      +hiDZejJjXBl/DKnBiSGUYdlJKmPxWlOJGlLpXCNMn44RihyAEQyJKq29gB+5CPVjR1DpVL4
      kXdLfb2wDEB9vJFvbflLXGvusm7UFOAhRCpJUC4xcPksl44foO/sMcqlLMo1aV29mrV71pO0
      NaQ/zMDlX9BzGkZGenGDAntEHjvoo+5iRFwEGKpiugC0KMl6INR0hKaBZhMZCTTNItArg9pA
      t5AqIlQRnswTqJDr4u9pOramEVDpKQJNR1JZIRiigW6gWTFSdgLNdGloXo2hze3Ku5oCPEAI
      KRAyRAQlQj+PFnn4XhbhF9C8LOXCAMrPE+b7Gb96BrM4SsoQNMUETjzCVZLklb1wxcDXbSLd
      wnTTJONpNDuBlsqA04oW24nmptFi9Sgrg27oaBqoasusRAAyAiUhLIECFZYAhQqqKWREiIx8
      Rgs5cqUced/HEh46EktWdnBPmToZ18GAifspGYGXBTGMJiPMqAzm3G2qPqkCFMf6GMhZaOP9
      NG9azqXDPazftGLOKlPjBqEI8LM9lPuPEBs6QzB2gTDfjxsFyMgnCktoIkQJH1tJlNSJKQM9
      3kC8dRldi1agJdvQrBharAEVr+dc3uP3o0UGvJC6ZD27lqxgWVMHhjIp5QK8fJnSaAG/6FHu
      LVIeL+KX8himgR13iDfUE0vHidcnidclcNMxYnXJSbPiuUqSDgIKvs+17DhXs+P05LL05LLE
      DZ2M69ISj7M4k2ZROkNnKoWhgZIRmmGhOXO7u+aka4JHrhzh4AUN7doJln/tSQ68eoZvfOu5
      KW8qghIHD51kw7bNXDj8EVm9jh2bVmFUB0kP4prguUApRSQCPC+LKAyQHTwFg8fRB08hhs/S
      iEKL1aPXL0WvX4yWaEaaCfKlgGsXL3L14mX8SMPKtNGyfD1LNmynbekqNE1HhBFhEFEg4uhg
      P/t7rpLLFqgbD1laMmnRHLxsCa9QRtc1DMvEdCzsuIOTdHFTcdxUjFh9AhEKgoJHcaxAaaxA
      UPSI/JAoiBCRwHJtEg1J3AnlSOKmYsTrk1iujelaGJZ5S+bsQAh6c1muZMfoy+foyWYphgF+
      FNGSTNFdV8/S+gY2tHVM6XW6HbOyJthJphk4/ybl0KfnF3+gvn16u0RevXCWsu/hj1+llFxO
      Z3CNwbKgPf5oW1xSSXLlLIWxi8iRcwQDJ7CGz2Dk+7BKIzTYSYzm1ejtmzA2fRu9aSVaqhXN
      rWe45zI9Z45y9dQRRvuu4cbSNHQ9wZJFq0imWhAhjJ4u0vvRuxQKZUYdydUMjNoKJ1R0FnW2
      Bi5pK43bESOWSRBLx4nVJbFca0L4Tduacn8DEQnCsk9YDvALHkHJpziapzRWoDiSZ+TiAH7B
      w8uX0U0dO+5iuVZFoeoSuKkYiYYU8YTLlromdrd0YcZscr7HcLFIbz5LTzbLgZ6rPNbUQmyK
      1CYzYdIeQClF4JUYHrjGvg/2YXds5ItPb5r0hv74NQ5dLGKW+lnU1cCwu4Zu/zR9ycdYmtGR
      UjI8PExjY+Osf5iFgkIRRgGenyeX7yU3dBp98ATW8GlS+V4SMkTXLcy6xRita9Ga10LLOki2
      opku6Lc2FP1nz/PRj15FBjq65qBrLqZVFVY0dNPASccomYpLosRAs4WedlnZ3MLmtg66EilM
      NDRDR9crM6xz9+EVUiiUlIhQEHoB5fFipbfJlSrH+TKlsQIirMwVKCnRTQM3E8dJusTqEjhJ
      l2R7Ay1LW+8p63Y+n8dxHGx78vHDpE1yfvgM/+7/+gkrtm0ln7P55rc2TlmwwMbVhrk2OETD
      0hUMn/qQYaXYskfHMIyJx1QVe5AIRMBwvp9ctgd/+AzFwVNkctfQRy+QDoosNx30TBd6y2qM
      1Z9Hb9+EnulCS0794xZHcpx69ThtizeSbquvmBj1SeyYjR130ByTvqDMwb5rnBwaIOU08UxH
      FxtbO2iIxxdEyvb69k83dkoqoiDEy5UmeovSeBE/X6I4ViDXO8bIuQFaFrVgJ+5+vzXDMLAs
      a0o5m7QHEGGZs8ePcOTkKY4fuchLf/U3PLFm8bQqEPgepu1QLmSJNId0IjbR8MxkDFD0cvRl
      r6JrOrZR+XCGbmIZNgowDRNLt1CAZdgY+k0DtFuEQbvpSJs4pXF7gbkuSEJG5MtZro6eJzdw
      HG3oNPrwWZpLw8SCInHATjRhdGzBaFqF3rYOva4bzUmj2dOf1VRKURzJs+/7b5JuqWPznzw+
      sY2rUop84HN6aJD3L19ktFxiSX0DuxZ1s6yhEddc4LNPU6CUQgmJEBLrHreune4YYFIFiIIi
      Vy73IqiMyoWRYs2KmacEnIkC9L31P2F8/D0iDSQaUoMQHQX4VSGVaITadV+zhkIDzUAzHSQV
      /7NrupXXNB3HdPA1HU3TwXSRgNQ0NLOitAINw4ojlMAeOU8s18si4RM3XbREM0bTSvTWdRgt
      a9Bb1qDHZ27eFUZyfPjPfyDZlGbbt57GtE0iKbk8Psqx/j4O9F4j7bisa2ljR9cimhLJGZf5
      MDErg+DS+DW+9+//A5kV61i/oovmrvnNiKakRNU/jtzdTUtrG0iBUgIir+JDrvqpkQJVPcen
      zglUWJ15vH4N133cCsLqvaQAv5q+RUaoKEDTDbR0O8aKF9CbVqA3rUZPNqM5s/u9lMYKHHj5
      HYy4Q/dnN9FfLnClb4zD/b30ZMdZ1tDEN9ZtZGVTM3Hr4TEl54MpB8FRFNB77hh/eO8AHWue
      4KU90/METca99gBDVy/w6r/7H3FiSb7xX/8P2O7MAqVu/ejq+slb/7/lHKDpaPrdzU5KpRBS
      EkqBkJJISrwoohj45DyfYugzXi5TjkLyvs9orkAuX0Q6BqZpYGg6rmWyqa2TLR1dNCUS9+Qa
      fJSYlR7Ay/fzy5/+Gt9J0da9gtWzYP7MBDeRIt3YRqqhaSJufCZotxsT3KVchboskfYAACAA
      SURBVEJQDkO8KMSLIvK+TykMKIUBOc8nH3jkfZ9ACMpVP3e5GgEZMy0Sto1rmsRtG1tA6fBV
      ulsaWbl9K2k3hmOauKZJ2nWxjUfbjTwXTPGNKuxYCss28QpZevtH6G6tuz81uw3J+iYeW/Ml
      iqNFonKEkZwbgajEtCsipQiFIOuVGSoWGSkVKQR+5eEH5H2PchRWrqfSUSilsE2DpO2QdlyS
      jsOy+iSuZZF2KudiVkXwDa0SNWnoGsILOfjj9+nwYux8aifx+ppNfz+4i+zQgkLeJ5maeXz2
      TAbBhZEcR3/1EWHZZ82LW2hc0oJ+l6nKIykpBQGFwMePogljpxwGjJXL9Bfy1dZaEEox0Sno
      VVMkYdmkHZeU45ByXFzTJGHbFcG2bMy7rE9hOMvxXx/AL3js+PYzxOrmbgHIo8KseIFupcyJ
      Y/2sXb90xpWbaSiEkoq+E1c4+LP36VjXzYYv7phwEd5MKATFIKC/kGO4WGS0XGKoWJiwt70w
      Qtc0MjGX1kSK5mSSejdGcyJJ2nVxDBPXsjD1uVs6XRjO8f4/vUFjdwubvvY4pl0zc2aDWUyP
      HvDaD3/IiB9R8sFpbWN58/zuiqjpGu3rFuPUJ3j3P/2BoR/mWfK5zQx7Jca9MsPFIgOFPDm/
      4u1xTYu4ZVEfi9OeSrO2pY2mRILWRIrUTV/Q/Z40Kgxl2fvPv6exu4Ut39hT229sHpiGApQp
      qmb+1be28C+/eIMje0+z/Cub575md2CwkGfftSuMl8uMlkuMbUziCR993wekTYfWlgYaEwlW
      NjXTGI+TclyStkPcsm6sUloAFEfy7PvBW2TaG9j4lV014Z8npqEACboaPP7xe6+xbdd2Yun5
      9QRdHBulL5+jJZFkeWMTDbE4DW6Mi28cYfDIVbZ8dTUdj3VPGdA1n1yf4XVTcbZ8/Qkst+bL
      ny+moQACsMjUpVFmPWu6G+a8UpOxa1E3uxZ1f+p841d2c64xzaGf7qU0WmD5nrULslUtZ0t8
      9IM3MW2Trd+oCf98Mw0F0FBICuNjjOYKc1+je0Q3DVY+tY54fZIjr3xIYSjLxq/swrAWzqDS
      y5c49LP30QyDbd96Gjc9txkPakzNNLxAIYN9oxTzw+Rkkk2rP9363i1zvSBm7NowB370DrFM
      gi1ff2JB+NSDss+Bl9/BL3o8/t3P4CQfjG1iH1RmZYMMrzDAz7//Q1777Wv84Ie/JV4/t8vT
      Zov6riZ2f/cFZCTY+x9/R25gfF7rE3oBB3/8Hl6+zI4/f6Ym/AuISRVASUEkFKbtkIwnSMTu
      Pi57vkg2ptn93Reo62rivf/nt/SdvIqS931H2Irw/3Qv2f4xdnz7aRKNtS1WFxLTmgiL/BJn
      Tx2nbDWzde2SGRd6P9cEi0hw9q2jXHj/JCuf2cDKp2cezDddpJQc/tleBs/3sesvn6Ou8+Fd
      BbfQmNV9gk0nzppNO2alYvcbwzRY9dwmEo1pjv5qH+VskbUvbcW053bRiIwEx1//mKHzfez8
      9rNkOubXe1bj9iwcF8kcoukaizYvI1aX4NBP3yc/MM62P38aNzk3M9pSSE789mN6j11mx7ef
      oX5R05yUU2PmLDxH+RzStKSV3X/1AiIU7P2n35EbGJv1MqSUnPrdIa4dvsiWrz9RE/4FziOl
      AADJpjRP/O2LpJozvPePv6X3+OVZu7eMBKd/f5iLH55m01d307yifUEsSq9xZx45BQAwbYst
      39jDkh2PcfAn73Nh78mJtN33ipSSS/vPcvGD02z88k7a1y6uCf8DwByMAUL++OpraOk2tmxd
      zeH3P6CoxXnuuT24Cyg0wbAMVn9mM4nGFMdfP0Cuf5wNX945aZq/O6Gk4urBC5z+/WE2fmUX
      nRuXzH6Fa8wJs68AUY7IaGB592JixV4a1j3LJv8svQXBklRlxZSUkiiKpr7XfaBj4xKspMPR
      V/ax/4dvsf6LO3BSdzc4vnbwAide/5hVn9lE27pFCCGmflONOUVKiRBiSjm7iwUx00PJkJGR
      MYavXcFOQCG2li7/PPnW1SxOmiilGBoaorm5eTaLnTHF0Twf/+hdojBi2589Sbq1fsr3KKXo
      O3GVQz99n8ee3cDyJ9fWzJ4FQjabJRaLzSwx1r0QlcbZf/AopdBg685NnPloL3mjjqef2Ial
      L+zkuH7R4+gv9zFyaYBNX9tN66quOwq0Uor+U9f4+F/eZfmTa1n9/OQpI2vcX+ZgSeTssVAV
      ACozx6feOMil/WdZ85ktLHt89W2vG7k0wL7/9Cbd21ey+jObF2To9aPMrM4EP0oYpsGal7aS
      bM5w4vWPKY7mWf3Cpom4faUUo5cH2f/y2yzevqIm/A84NQW4Dbqu0719JfGGFB//y7sUhnNs
      /eYenITL6JUh9v/oHdrXLmb1CzXhf9CpmUCToJQiP5jl4E/eA2D5k2s5+duDNHS3sPHLO2ur
      uRYws7Ie4FFH0zTSrXU8/t0XcDNxDrz8DpmOyiL2mvA/HNRMoGlgJ1y2ffNJxntHqetouG0O
      ohoPJjUFmCamY9G0tHW+q1FjlrllDJDP5wnDcM4LzeVypNMPxvLKGg8mpVIJy7Kwpthf7JYe
      IB6Pcz/GxEEQ1BSgxpzjuu7d7RFm3GVS1zvRf/YIx3pG6Vq6hgbGOH6+j8e27KI9494XBatR
      Y7rMyRhgtCh5fM8eYobO4SN9PPnUbo4dv0DHprVAxbuiL6A0hTUmQ000Wjc3XdpNf6diPuKj
      rsvYVHI2JwpQn3E49OFezGQrMdPEtBw0IjRNm3jUFGBhopQEv4DM9SAGTxL1H8Mv9BOhcT2u
      MtJ00E0sw0LAxH5sERpR9ThEQ2gaoGGbLoFW+b2FVnmtch+N6BPHruUitcqeb/F4I9vWf31i
      M8S7YbpyNicKUC5X9uXSdAMnGuWtN/9I0+INc1FUjRmilEKVR5EDxxH9xxD9R5DjV1CFQbR4
      A0b7ZmKZRSAClKg6SEQAMqo+BEr41fNR5TVAyaDyP1T3Zatec/O+bDKET96TSjJOhYZId6CW
      vwDJuYscnhMFWLJ6E12RxLRMNLWMZUJgmjWP63yjlAQvhyz0I/qOVoR94Djh2GWU6RAlW6Fl
      HWbnk+SNZoaHc4wPDhJ4JZxEHfFUHU4iiZtJ4MRTJOsbceIJdN3AtGwM00Q3DHTD5NY91rjp
      /zudv+k48lEyqmwabs1t+shaKMRDjFIKle9HjpxF9B9F9B1Bjl0iKAyQM2zChmUYbesRyWUo
      lWZ4KMd4z1XGBnrwi0VMI4mtV4TejGnotgRd4hXziCjEK+SIAh/TdnDiSWw3huW4uIkUTjyB
      m0gRS6ZJ1DViOS5OPIkTi2PH4tixxJyawbVo0EcMJSMISsjiIKLvMOLafkT/UcLSKF7kkzMd
      xtOdBIufxK1bhVE2KQyPM3r0CsXsByghse00llZHTC4n5abRMHASCdAgKoToho7lWtQ3xkm3
      1ZFsSZNsTiJFSLmQxfcKeMUCpdwY5XyWkZ4r+OUChbGRypprXUPT9IptbhjYbnxCUeKpOuKZ
      epxYnESmATeRIlHXQCyVmdNBdK0HeEBRkY/K9SHGLiKHTiN6DiCHz1AujTJoWIw5aUr13cjG
      1eC0E/NdGC0ycvUiueEBnFgSy0oRc5swVR2adPGzAbG6BJmOBlpWdJDpaKCuoxEpJH6hTGE4
      R34oS65/jMJwjuJonqDg4aRixOuTZNrqyXQ2kmxK46ZiuKn4RLRsFAZ4hTx+uYhfKlAu5CrP
      +RyBV6IwNoJXLCDCgMArEvo+sWSaz/3r/4Z4+u43ZqwtiHnIUCJCDp1E9B9DDp1C9B1CFgbx
      /QKXTZfzVgy/fgnpjq041KPnBHI0T763l3Ixh+W4NLR0QxTDIkN5NERFOqZt0bC4hebl7dR1
      NZJoSGHF7ClbXSUVftHDL3oUh3PkB8cZ6xkh1z+GlythxRycpEu6pY76RU0kGlOkWupINNw5
      N6pSEhFFRIFPFAZomkYic28Z9WoK8ACiZIQqZ1HeWNV2v4AYOVcR+NELlEXAmG5y1XDoizfg
      pTsJ08voNFto9F2K13oZvnYJKSLcRIZ0Qweu3Yht1OOPCYpjBey4Q7q1juYV7TQvayfZnEHT
      tVkxM66LUuSH5PrHyA9myfaNMt4zgl8oE5QDdEMn09FApq2BZFOaTEcDTtLFTcXuerfPyagp
      wAJHRT5y/ErF5Zi9hhg4gcz1oAr9iNIoRSkY1U0GDItew2bISaLXdeMkFtMQJkj6JnJwnOLI
      MKFfJtPcTqquDdush9DFzwr8nI9SisYlrTQsbqZxSQuJxjRO4v6mZ1dKEZR8/HyZ4mie8d5R
      sn2jlMeLFEdyGJZJojFFrC5JqiVDpr2iHMmm9D0rZk0B5hmlVMXHHZZQ5THk2CXEyHnk6AXk
      8GlEfoAw8ihLwbimM2bF6HNSjDsp/FQ7sbpFNKXaaUx3kDGSDOz/mOy1q5THRtF1g3RTG3VN
      XdQ1LibIauT785RGi+imTqIxTfPydpqXt5Fuq8e0TbRpeFyUUkRSUgwC+vJZTg0Ncnl8jHIY
      Yuo6lmFgGQauYaLrGjGzsvGgY5o4homha1iGiW0Y2IaJbegYmo5tVs5ZhlF51istvRISGQpK
      I3my14YpDGUpjRYoDuVAKdLNGXb91fPY95CWv+YFuo9UZk/zyFwvMnsNOX4ZOXgKme9HZa8R
      lscY1zTyukXezZBPNhMt2oVKNGM3LCGWbKUl2cKqeCOZWD2OeeuPlhsZZCQ4QNeS9cTWNKN8
      i9KwT/b8GIXzgySbMrQ+1kXT0jbS7fV31cKLqsBfGR/j0vgol8dG6S/kcU2LzkyGTe0dZByX
      SEpCKQlFhB9FCKUohyFCKbKehx9FSKUQUkxcK6REKkVUPRdVzwmlsHQDXdcwdR1TN7ANHbPd
      wOxMosIYwXiJjGGyw5zbiIFpKYCIQpSmo6FhzOMaWKUUKvIhLN1yXrNc0G5Xr9t1n9odQlhu
      c/KT3a8CZIQqDiFGziKHTlfMmKHTyPI4MigSiIAh0yWXaESmO1GrPo9Zt5hYup2GTBddbj2O
      5eCaMQx9aptXKYUKTJLaGsbODDHiDZJqraOxu4VlT6yhrqMBK+5MO6OdVIpQCK7lxjk/Mszp
      4SGyXplACBal61jd0soXV6+jKZ4gYU89GP7kvZVSyJsen/y/8pD4QiCkJBSCQAgCEREIQSgq
      yhJ0CCzDwJzFccHtmIYCeLz8f/9vxBdtAyPF176wa04rNBnF7CiXfvzf05F/7xZxNVC3l+nb
      zCJqhg36Jz62roPx6VZTs2PcohgyQuZ6iWSEcusInTRRup2gczt63SJkwzJUopnuTCcJO3Ev
      H/FTeLkSe//f31Pf1cSmrz1OXWfjXbXwUikKgc9wsci5kSEuj41xJTuGa5o0JZKsbGxiZWMz
      i+vqsWYobLqmgaYxtyI7u0xDASRK0zl/9BCdW56d8wpNRik7xv5LHpn0Tp76xn+GWbXvNFXZ
      yxIqjbQXltEA9zbDGwtJGHoobiTD1RXYN03Jl8NKLJOj5K2KpZsEsXrimUWoWB2ak8SZw6n6
      0Av4+MfvUdfRwNZv7pn2OmQ/iujL5zg3MsyV8TH68zkCKWhNpljZ2MzTS5fTlkqRtJ0FtXn4
      fDCNQbBkqL+HC2fO0bJqG0tbZ76Q5V4HwVIKes+ewLAs2pfdPmHVw4KIBAd//B7Z/jGe+JsX
      id1hS1WpFF4YMlwqcnFshDPDQ/TlcgA0JhIsrW9gaX0j3fX1uKaFxvyEJ99vZnEQnOWtNw5Q
      Ele5MGiw9JtPz1IV7x5dN+ha9fBHlSopOffOcYYv9rP7r174lPAHQtCfz3F5fJRzI8MMFgrk
      fI+2VJrOdIYnu5fRkkzSEIs/EsI+E6ahAGkaUiWam7ehOdPZ5E0xcPk0Z/vLbN+ygZ6zh8np
      DWxavaRiI9aYFKUUvceucP69E2z6k8dJtNXhRSEF3+fcyDAXxka4ODpKJAVxy2ZlUzOb2ztZ
      1tBIzLKx53jQ+LAxDQUoc+3qCOQiulZPnTFZlgY5N6yxe9sGKPUyqrXR6Pcx7C2iJTZzr+vI
      5UF0Q6e+6+HYekhISTkMKQQ+pTBgJJvn448PEa5M0FfuI7f3IlnfQypFvRtjUV09n125iiX1
      DTTE4o+8DT9TpiGRDrGUTaKpiXRi6rz5QS7L+Hg/b73Zx+ruFMnmLbT5WXrKikZbTORtD4Lg
      nio83jfC6d8dZsNXdtK6uuue7nG/kUqR8zzGvTLjXpmxcpms7zHue+R8n0BEeGFIGAnMUNK8
      tI6WugwZ12VNUwsZx6UxHidh2Tg3rasQUURtJ4LbI4QgDMMpTcBp9QCa08XTTz+NYU3thXAa
      mmnO+DQ4AUW7jpFzh8mLMqt26hiGMfGYarX+nVi2azXeeIkjP/+QLV836FjffU/3mQ2UUhM+
      bD+KyPoeOc9jrFxmuFixy0dKJXK+h6ZpOIaJYxqkHJf6WIxFmTqaE0nSboyk0jn94w+wbYed
      n92D6Vg1+30GGIaBZVl3lxXi9ljofj+vvPIKnY9t55ntj016tWbXs2ZZwEhR0tXZRpPbg6cn
      SVuzY5tqmsaaF7eglOLQz/eiGRrtaxbPyr1vRiqJHwn8KCKUgnIY4ouIrOeR9cqMlkpkvTJ5
      36cchZSCEE2DtOOSdl3qY3G6MnVsaOugMR4nbtmVh21hG7d+7SISHP75XoQXsu1fPVdLu3gf
      mVQBlAg4uPdd7M5VPLt5CUfPjU7rpqmGVlLVKNaG1tk3U3RDZ+1nt6JpGgd/8j7qTxStaxZV
      Zh5RCHljBjKUlZlGLwoJhaAQBHhhSCAEhcAnFAIviiiHIV4U4kURpTAkqK5n1aszx9fbYssw
      STkOzfEEi+vqqXPjNMRj1LlxEraNoesYmjZt21xJxfn3TjJ4to9d33kOZ472Lq5xeyZVgGz/
      OS5nE2xeXOIf/vFV/vo//6v7Va87MloqcnJogLwfECy2uZSNc/L4IdLFXgIhiKSgHIWV6fRI
      EEqBoVUCuUxdxzXNieOYZWHpBq5l0ZxI4FoWrmkRrz6buo5rVZ5jpompG3cdHjAZSil6jl7k
      7FtH2fqNPQ/NwP5BYlIFkCrk3Mfv0XsBysWQoyfO07ln/f2q2205PzrCgZ5ruKaJa1q0rV2E
      KgQMHbxM54pOOh5bQtK2sQyTmGkSs6xqq6yja5XgK/0uW+m5YrxnhGOvHWDVcxtpXzf7ZlyN
      qXlowqGPvbafywfOsuPPn6FlZces3nsuKI7mef8/vEHTsjY2fmXXPW3PWuPOzMH+ABEjw9kZ
      VmvuWPvZLXRvW8HBn7zHyOXB+a7OpARFj0M/20u8PsmGL+6oCf88chcKIBgfy89dTWaIbhqs
      +9x2ujYt5aPvv8Xwhf75rtJtkUJy7DcH8HIltv7pk7W9BuaZabhBBYfef5v+nI9hxWla3EHG
      WZizj5quseazW1FKsf/lt9nxF8/S2L1wVp4pqTj3znEGTvew6zvP3THArcb9YxqSXODsxQJb
      N3TTf+UUb759au5rNQN0Q2ftS9vo2ryM/T94i+GLAwsiI7VSit7jlzn33gm2/MnjNCxaWBuF
      P6pMQwESZNwcb/x+L/Wdi6ivW/itlm7orPvcNjo3LGH/D99idAGMCcauDHH4Fx+y/PHVD0wI
      x6PANEygEBWBijeza/dzNKfvb0aBe0XTNNa+tBUF7P/h2+z49jM0zJM5VBzNc/Bne2lft4iV
      T6+vhTgsIKbRA9hs2r2bejnEL3+3b+5rNIvopsH6L2ync+MS9n3/TYYvDtz3OgQln0M/34ub
      irHxSzvRax6fBcU0FCDg2rUhNjz5Jb72/Ja5r9Eso2kaaz+7la6NSznw8tv31UUqheTYa/vx
      siW2fP0JDKuWhGOhMakCiMjj1KHDnDl/jH/4X/93jiwAW/pe0E2DtZ/bRufGpfdtYKyk4vy7
      xxm60Me2P3uKeH1yTsurcW9MqgDF0Uu88su3yHSuYMOaLezYuPx+1WvW0Q2dtZ/bOjEwHrs6
      NGdlKaW4duQiZ946xrrPbaOuczor6WrMB5MqQLp5FX//X/1b1ne3EouX2fvhiSlvqKQkDAKC
      IERKVUl2KgQLwBOJruusfaliDn30g4o5NBc9QSXGZz8rn1lP54Yls37/GrPHrMcC+flhDh07
      zdDAIGt37ebKsWN4yubp558iXs3ytRBSIx59dR89Ry6x49vP0Lhk9jbALozk2Pe9P9KwuIWN
      X9k5qwlfa0yfec0NqkTAiRNnWdaic0GtYLF3msHMKpakdZRSDA8P09g4v2aBjAQnfnuQwVM9
      bP2zJ6nrmnl9Ij/kwA/fQYQRO7/zXC3MYR7J5XJ3v0/wbFEY6cFp6MS2RwjGipQCgdPMxJY4
      uq7P/55hpsmmL+/ihHmAAy+/w/ZvPU3jknvvlaSQnHr9IGHZZ9d3XsCdxvrpGnOHYRiYpjml
      nM3NPsEFxZKldegqgXZ6L2eMeh6PmbdMAC2EySBN01j7uW2VybKX32bnXzxLw+K7D1FQqhLj
      03/6Gjv/8jnidbOTFrHGzJlKzh6a9QAzQQrB8d98TO+xy2z/1tM0dDfflYJeO3yRI7/cx+av
      7Z7XRfo1bjAH6wEeXnTDYP3nt9OxbjEf/eBNxq5M30U6dnWIY6/tZ8WTa2uruh5AagpQRdMr
      5lDnhiXsf/ltsn1TJwAojxf5+Cfv0bKyneVPrl0QZl2Nu6OmADdhmAbrv7iD9nWL+eCf/8B4
      z8gdrw29gAM/fpdYOsGmrz5eW9X1gFJTgE9QiSLdRvuaRez7/pu37QmUlBx99SO8XKmynneW
      ch7VuP/UFOA2GKbBus9vo3VlBx9+74+39ARKSs6+fYzBs71s/9bTJJtmni6+xvxRU4A7YFgm
      67+wg5aqElzvCSqZm0+y/gvbazE+DwG1+NxJMGyT9Z/fDsC+7/2R1Z/ZzLHX9rPsiTV01tyd
      DwW1HmAKTMdi45d20ryinY9/8j7t67tZ+cz6aW07WmPhU+sBpkFlZdkOOjYsob6raSKko8aD
      T00BponpWLSsWPgZ52rcHbcoQKFQIAzDOS+0XC4zNjY25+XUeHQplUqEYXh3wXDTCR+dDTzP
      I5G4t4AxpdSMZlyFEBj3GKMvpbxn8yeKonuOgL0ernWvn3smZc/kMwsh0HX9nus907LvOhz6
      foUoz2SHmJmglJq3UGxN07Cs+VkfMF9lCyHQNG1exkymac7WDjEPF/fa+s+U+Vz/MF9lPwjO
      ggVVQ6UUPeeP8/Y779I3VrrplYgrl3sI/TJ+JPE97/9v78yf2zauAPwRAAHwAEmQlKibsmQ7
      Tp160iZOOk1bd9J/zP9VO21nbMuX7EaRbd2UJYqiSIn3BZAgiKM/OJ3EsZ1YsWaqzOj7EQPg
      7S6w7719s+/tdw+4nFTev1JFIBA4hTke8OTOXZYeLNMybWrFl9y//4CT9oB+u8J6rvDecv8n
      G2Dj6WM6Ix9/1GXp8bPX7jGrRzQsB8uyAZ++2f/Befav44yGOO67d7KPhkPcd7hOvjPkxcoy
      j56sYgydU/XjXTijEY77emtfH2+H1Yd3+Ps//snq9sGZyLSHFt4pN/P7vsdhbo2l+w+pdizE
      27dv3z6T1pwC0zTfvgbwXdY2dvj9F1+gCB7VUoH9YhU9neDg5RFayKfebPPwwQOCWho9qrKz
      uUal3iGeiNG3hgQFF9N0UZQP1XomPSvOjYUIuycGrXqTz7+8iSoFOCkd0mgaTM5MnlqD1Ms7
      NAcaonHCTrVLdjyB44sMum0GzWMaoxHLS8sIoSijnkFUU9h8/gJHjoJlIoRCdBp1tp89JFcw
      SCaD5LZ3sQIqkjfAFxS67RobT5cpNHukxyb58ValSj5HYGyBy2MBcqU+glVnd69IPJ2iUTrg
      Zb5ELJXGqBbIHVZJpqKU9/PkyzWSSZ3j/DbHXYeY4rG3u0etZ1Pde8HGfon05BxvH3qByakx
      2gOBzz5ZpFMrsbVXJpXU2Ntep2b6xGR4ubdDo9PnpFggpKdolgrsF0r0jSbNPihul7XNHHI4
      ysrDf1ExBJKawObGDiF9DPW7vHPLsggGg29aP8diLVfg85ufIQvu+XKBAgGRG9ev8OzpI8ay
      VzE6NrPjIXb3ywAMek18bZG5bJbpsQQAkhJhfjbB1vYBsuCSDIE0dQ3tDNpT2FrluKxy+cZH
      NE2doCji41Br9JkIO+TrQ66kfzrh4scI0SkE65i6KDAeU2lVyoj6DK29PNG4iBxJkM1eYm5C
      Z+dFjm63Qip7heLLLaK+wPSXSfL5PJnpOcZDszitAnJ6nkp+B1uX0aevkz84YnximvBMFvUt
      X7hre0xpYUIK+AdVjgc9FuYybG3lEEYu2ZkEuc1n9G2ZyxmFXOElvRPIpAPUT3ZZerJFAJHQ
      rY8YSkmG7QozmWk0OUbkPZYavmOx/HgZ2/fxxDDDWo1y5YDQzU9wo0nMYpGFjzMc5CvYnR5T
      Yz4VJ43fKBP3FGqVMk1LYG4mS3p2hs2ndygZHg1b4usvf/oEo4CkcuPqLCtPHjG9cOX8uUCV
      ao2ErmMZJpbR4ahcQw1/n18rSEGsXoN6xwDAsQwOD8uoMZ2MJrLdGDEeORs/P/vx7/j6b18z
      m56C4REv1tcpFIsYgwFtR6JxdPAL3hogGbRoeDFkEYJSgIO9HEe19qv+iUHcfouT5quzGMKq
      TLl4iO2JyEGX3Noa9Z6NLImUD48YeS614yJDTyQY8NnPbVJtmUSUAIdHJey3eDgz6RjfPn/O
      6tN1tIkUo4HBYbGEEokw6ncplk5QIjECdo9SpYksyyRSabRoBEEMMj4xxY0bv0EJyiSTSSIh
      FVWROC4Xsd7LoxKIJ8eYv3ydVGiIL2tkkiFGThA9GUfXk8T0GJLvE47FiSXi6PEEqiLRqLfI
      zF1CxkbCpVSuoGg6c9lLXJ6b/FnJvudQqTfR9QQD0zxfKZG+7zMwuphDbTXMygAAA+tJREFU
      Fz2usL5ZYHZuGj0RYzS0EUXwBRnb7OCJKlpYwTQ6DGxIJiJsriwTyn7KYuYs9L+LbfvI8isV
      6tgW7a5BRNOQxCCSGGBo26g/k3L3Y2zbRgz4jHwRPBclKNBsd5CVMCFZxJdknH4XmyCqJCLL
      Iq1mGyUaQxU8Wr0+aihEWBZptQ0YHHPijXNpIoEieLQ7BnI4QkQWaHUM4noS6Q0152N22ww9
      iUQszMbaGpMzWfRkmI1nu0xlZ9D1OM7AwLBcEgkN1/ERBR8CIn2jje2KxGNhCEh47oigKNBq
      t9ES6Tdcru/Feli2g6oEGfZNuv0hsXiMQa+LEFQIKQoBScR3HCRZZGT7gI8kguuL+J5DwHPo
      9G0iYZWg4NMxbGKaQqfdI6QliKivTNC7UiJ936ff6zAY+eiacL4mwAUXnBUXOcEXXPAenKsJ
      cLy3wd2799jKH7+1lKLnOlj2CNu2ARhZA5x3xQkvODVm7YB/37nH2k6B1yOsLvbbFhNnyNbq
      I5YePKbSMl+7PhrZZ1q+sph7wd1798gdvgqfn6soUNsWuXXrT6ysrDJIq+QLZWYXr+J2Tziq
      W1yeH6fR6rD2Yp35q9dJSh7hmTk6B3sMg3FmkxHKlRKOGGNhbhLhIkf9VLj2gGuf/YVAZZWD
      Ex3JLDEUYqQiXR7/p8rnf/wUu3nMIBDh8sIs4lmOb0jnq+tZnn67Sey3i+ztFcnMzrPz/Anh
      xDRXFqc4zB+Snlsk8wF1lwxX5tafv+LpyjMsXTxfFsA16ty7t8TAV9ne2iadSbG5vsbu9ham
      ZTO0BnSHLmPj40xn0pi1JvVGkYYl4rQL7O7k6QRUrOYxA/f/3ZtfKwFSUxmsZotK6Yhn3zzE
      EDQymSnikSCV0hErK0+odYZnLlmUw2hBAdPscFjI8/jbDfTUGDPTU3hWj8PCPo++WfsgGXbn
      hHtL93HEMJtbu+fLAojRNH+9eQ2A9ZXHNOoNAqLCTHae3OYm1XQKBJGI4FFt9wgAkihhmS0c
      zyGqKqQmxrGdPuegGPWvDs8dcbif49isML24QMvQmZ8SCIgqQ6NEvylhBnXmpyVc52w1jNmu
      sbPl0g2oaPU6E5eu0Ww20BSRarOJ6rbJzF+l3ux+kBw5PsFf/3ANfI/n3yyfryiQZQ1R1Ver
      dsceUGt00NNpnH6XnuUznooz8jwEZ0i77xALq0ghBaNZxxFCJCIKviThj2wkWb1wgU6JY5lU
      Gm2i8STxiEyzXgdJJappmO0aUjiOY3ZwJZW4phF8M776i+k0q5g2pMfSCI5FrWUQ1aKEgwHq
      LYNEIkqr1SUc1YhFf/6gxndFgX74j40sk/8CWHAzOvNe/74AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='MAE' width='192'>
      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
      8z96O1Bxd7zocAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='QB' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='RB' width='192'>
      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
      twAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='RMSE' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='R^2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TE' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29WZBk13nn97tr3tz32teu6r0bjcbagMgmwEWgRBLkSBpZkscKa+yxYyL8
      YIcdDocj/DT2i+0HxyjsB8+DPXZ4YkZWSDRNWba4CVxAEAQBNNDovbr2Lfc9867HDze7wSaA
      Rnejqyqr6v4iMjLvknm/m/f8z/edXRJCCAICDinyXhsQELCXBAIIONQcWgHU6/W9NiFgADi0
      AjBNc69NCBgADq0AAgaTbrcLQLvdZjeqZwIBBAwUy0tLAFy7dmVXrqfuylUCAh6QwvI1tra3
      KbUd8jfeJzZxlPXFBZxagartkhk7iijdZGGzxfnPnWf17Vsk56bprN6m58H0mWep33ydW0XB
      y1++wAc//yVDx56ktfxLFisKX/rSM7zzs7fouB75pBEIIGCwGJo+wYmTJ/nVr37J8NgIl955
      g+zRp3BllVNHRrl89TqFis3x43MYqkxm4hhPHB/iigszQzoL9SKmyDAUqlA3TUZmT3HySJSf
      LufIKWXqjsf8macxuzVOzo8GAggYLLLZLAAjo2OoRgxbaEzkIly+vsob1SpPnH+KsdQCN9dr
      DE9NMDLiJ+HS6k1qrRGeOHealXqFdnSSTCzej3GiJONgxKfJRGKgghNRQA4hHdaW4EKhwNDQ
      0F6bEXAfmqUNmsQZy8Vo1ltEk/FPKLS6NOpdEsnYQ1/jHgHU6/VDUz3YbDaJx+N7bUbAHnNP
      CPSjjRoLleZe2QLAK/PjnBlO78q1Ag8QcEDKAA5v/+wn1ESM37rwNCFVpnTrfd5eKzM2cZRh
      vcl7N9aZPvU082OpvTY2YIA4EAIQtWUYe4onxQabLZOZVJhCw+L8k+dJxmJcuVzgpS9e5L33
      ruEOx/E8D9d1sSxrr00P2As8F1wL4doHQwC4DqoWQhMyjusXaUbH8izdvsktEcbQZGRZQcJD
      UZS7L13X99jwgMeN8Fywu4huBWG1EZ0KolfHa24gOlVEawvRrSG6VUSvfjAEIKWnqL39Gj+T
      wrz44hRbhSJmvUK93iCcTpLRenz/e99nePbsntgnhAeuDZIESB95lyRpT+zaDwghQHj9lwCn
      i+hW8Rqb/ntzw0/QjQ1/u7UNrgWO6YvBc5D0GFIsjxwbQoqNIGePIUXSyImxgyEA5DAXv/LK
      3c1EJAxDeaaPf3jK9Mk9sKuPc+U79F77b5FUAykUA0UHNYQUiiOF4v5nLYqkhZFCCdAjoGj+
      cb1/jqyCoiIpIVB1kGQkRYf+tiTtv14tQgg/FLHaYHf8HLtXQ7SKiHYRr11EtAp+bt4q+rm2
      2QQtjKRH/P/MSCKFU0jRIeTcUbT4KJKRQopmkSI5pFgeSf7kZH4wBDDgKEdeIpwYRfQa/gN0
      LbB7CLPhv+ye/8Cdnn/c7oJrI6wWwmqB1fYFIKug6EhqCCT5w8933lXjQ1HJqi+2/rakGv5x
      PYakx3wRqSF/O5RA0ozHft/Cc8Fs4rW2/Vy6td3PtbcQnZKfuHsNhN1GWB3/PhUVKZxGiuaQ
      o0P+e3YOKdrPwaN5JDUMegRJj4IW+UweNBDALiCHU8iTz3/i8Q+bYoTv5j/mXdg96AtEmE3w
      HP+9vy2c3zhud/AaGwizAWYL4Zp+GOG5/kt4fmjmuSAc8Dw/QakGkpEAPYokq76Yfl1EWtj3
      SkbMF5kWuRtTe81+WNLYgG4Nr10AQJK1D72ekUCK5JDjI8jZeeRo3k/wiVGk6JBvgyT74aEk
      P3bP5toOvWaX8lKBjQ+WAwEMAh/mYBJ8QmYmqf0cOj7ySNfwyyF9z+P0PYxr+wVGu+uHInbH
      3zabvufpi0yYTUR9De9ObG13/XM9F1zTty2cQo7kkcIp1KkX/Jg7Pup7GyOBFEoihZP3DUd2
      Cs/1qK2XKd7aYOv6Gs3tOkYizMiJiUAAhwVJkuFOGMSjtYUI705h1Ol7jn4BVVZA1vxyywAU
      6IUnsE2LykqRjfeXKS9t45g2sVyCofkxnvjG88RyCTRDDwQQ8OBIsow/hGTwko3nebSKDcpL
      2xRublBdLSIrMomRDPOfP01+bpRYLvGR7w3enQQEPCCe61HfrFC4uUHh5gaN7SqKqjJycoJz
      33qB9ESOUNRAkj/ZKwUCCNg3CM+j1+zRLNTYurrK5tVVHNMmPpRk6Ng4T7z6PImhJEgP3rYS
      CCBg4OnUWhRvbbJ5dZXaWgnP9cjNjnDs5bNkp4eJ5RLIyqPVFh0IAQjh0my0MKIxdFXp7xP0
      uh1C4Si9dgPLEcQScVR5/zUYHSaEELi2Q7vcZP39JQo3NujUWuiRENnZYc598wKZ6SH0sN4v
      k3w2DoQANm59wEqlC2qc5586hSyBWd/k//3em7z8zVd57+c/JZGfZv7UcWJ6IIBBxGz1/ALs
      rQ0qK0W6tTbx4RRDx8YZPj5OaiyDoj3+5DrwAhBC0CgXcPUEmYTG9laN/EjunpFBVVPiuWef
      48YHl7A90GWbG0slTh0dB9o0qiZGXiakKLiuG/QGHQCEJ+g1u1QWtyktbFFZKeKYFsnxLBNP
      HSE/N0o4GUHue3RXeLg78LwGXgBWe5P/8y/+BlXx+Nzv/z7XfvIuX/2HX75HAJJr07MtLAdk
      CVrby6xsbNKrbmMlJ3jp1a/TWrrM7VKL48PxoDfoHmF1LdrlBsWFTbavrVFbLxNJx0hP5Tn3
      zQtkZ4bQjN19JgMvAEnWyI7N8LVXnuJf/cv/jYaY+cg587MTvPnGLxibP41ZXUek5/n6785T
      WF0klk9x/f23aLshzh+J7P4NHHJc26W0uMX29TUKNzfo1jvEh5KMnpzk1CtPkRhOo4X3LiO6
      Z0zwt68uD9yQSCEEttllbWGF3LEjeB2TZDL+ST0GHphgUPzO4Lke3UaH0sImmx+sUF4poOoa
      ydE0+blRRk5OEk5GH7nW5nEz8B7ANat8+y++y9ipZ5jWdJRkELYMGq7jUl8vU1jYpHhrk2ah
      hh4OkZnOc/73XiQ9mSecGEzvO/ACkLUoczPD3FpexX7mFMpeG3SIEUIgPIFrOfSaHaqrJarr
      ZUq3tzBbXYxEhNFTU5z+6tPEh5KoocHoG/RxeELgCbEPBCDrzMwfR031wDG5ubjB3NHZYFLT
      XcDzPOyuRafSpFVuUl0t0izUaWxXcW2XSDpGLJdg7sWTZGeGiOYSyAPQziKEwPZcerZDz7Hp
      OQ4ty6RpmjR6PRpmj5Zl0rKswReA1dnm//n/fsbMuMaf/90PePGVrzO/10YdUFzHpVNpUV0t
      Ut+qUlsr0a13MNs9QtEQqYkcudlhjl48QzQTIxQLo4a03bfT8+jaNtVuh7ZtUe126VgW1V6H
      tmVR6/UwHQfLdbBdF8t10RWFqK6TMsIkQga5aIzZdGjwBeDYTcyOjBQ2EE6IREhC8Ind5geS
      S5vr/HhxAVmSMDQNQ9UwVBVdUdAUFUNVCWsaiiT5xzT/uCYryLKEIsmosowsSciShCL728oj
      5rae62F3TbqNDs1CnepKkcZ2lfpGBUmW0WMGiX7/mtR4ltR4Fj0SAtiRkMb1PGzPT6iW69K1
      bdqW+WsJu0vbMql1u7Rti6ZpokgSmuL/h/7/p5MIhchGosxlcsRCIWJ6iJRhkDAMNPne4PnO
      fXysANxundVLr1Mv2oycP0974TKuHGb43PMkEuHH/gfcj1BsgosvWdjA174xRyRi7KvEDzCd
      yvDUmInjeXT7Lrlr23RsC9v1MF0Hy3FwhcB0nLvbnhD9xK6gKTKKJKPIEpqsoCkKqiyjqyq6
      rBDWNEKqiiLJGJpKWPWFpioymqygKwpmsUF9vUJrrYxZbuHUukRTUeJDKfLzYxz9wlmimTjh
      ZOSxtboKITBd/34bZo+25SfgluWHI/WeH46YjkPP8UMWVwgiqkZU14npIRKGQTYSZSadJREK
      kTLC6Go/4+hnGPIjCvNj71IJJ5m58Bwr7zQYnsizVh4nMzOFHtn9GhhFDXPs9On+lsC2nF23
      4bNgmz1u/f13ieohzr389Xv6rwghEP13r18b7QmBQCCE3/ppu34s23VsHM/Fdl26/W3LdTAd
      p7/Pptnt0u6a1CsNLNfFVf0RZpIsoxoanuchPIGXF4ishhAqmqZihBzCWhWj1kKt+6IKaxph
      VUVTFHRFJdRPbJoioykKhqoR1jRUWfavbZo0zB7Vrp9bN02Tutmj0evieB5Sf/YLSQJD1Yjp
      OgnDIB+NMZfN+dshP7eO6aG73u7Oa6cK0w8k8151m4rkkZk7iaruZT2MxdX3Fzj99P6pDWqU
      C1z60d+gaDpz518gnsnfPSZJku/NJOn+9/MxTld4Ase0aZUbtIoNahsl6pt12uUmVsckmokR
      zSZITuaIjaWJjKRwZXA8D8tx/HfXF5Tt+QLqObYvpr6oip02tuv6IUo/PHH6n51+2CIEqLLs
      C0bzE3ZE00mHw8ykMyQNg4iuE1Y1YnqIqK6jKYPz9O4rgDuqc8023bqG43q7YtRHEXRaTSzH
      Y+bYNHjC7/PQx7NbvPXme0yePMdIJoqEPwb2xpUPmD5xhtLtyxSsCOdOHUHZ5Wq5ZG6Esxe/
      SigSI5rKPvT3/XlxBK7t0m10qK4WaWzVqK4V6dTaOKaNqqukJ3Lkj4xw9OIZ4vkkWlh/LNWQ
      d7yTJwSu5/nvQuAJ/7MQIPfDMlWW0RVlYKs+P477CCDL5JP+Azv+yrd2yZxPostf/e//B4mR
      NO+/d4WzX/p3ePVzR+8evf7BVY6ee4KFqzfIp8+jSlBaucbqRpnhyW3WOjHGtAZb9S7jqd1t
      kFF1nee+/kcPfP6dqsdutUWr3KCyUqJZqFHfrCA8gZGIEMvGGT42TmI4TXI8u6ONTJIkofQ9
      1CDl3I+Lga8F8lEwDA09FGL8yCxWtXHPUU8Lk4xGiUdkHA8ku85mx2B2OIroNIgNTTMkeyyb
      7sD1BvUcl1a5SX2jTKtQp7FZpVfv0Gv1MOJhEqNpMjNDTF84RiQdI5yIoOj3PrZBuI/9yj4R
      AIyNTWDGMnzrC79D7Dd6DBrC4vbKMrWOxIzTpdlqU9ta4cbGCscvvEijcJUbqsXwifE9mxvU
      cz3snoXZ7N6tY69vVmhs1wDQwqG7sxakxrMkx7LoEX/Qx34KKfYb+0QAIc5feIrv/tW/5l8v
      1/knf/KVe44eOXma2wvLnDh9AmG1CCXHuPjyGJ1mHS2apBlbpeEY5GOPf/azB6G4sMmNv3+f
      drmJ2eoSTseI5xPkZkeY//xpIpk40UwcZU8rGA4n+0QAXX76gx+TO/45Xjp17CPdICQlxNyx
      Y/2tzN39kXjS3zM8+Wt7dx9ZkcnNDnPkxZMkR9P+fDQD3E/mMDHwAhBC0Ko1yY4P8/Zbr9Po
      Cb7xxaf3VWNYdmaY7MzwXpsR8DHsfc+lT6HXXOS//6//nJoXJxPN89LLTw2+0QH7hoFPS0Z8
      lv/4P/szWutXubl2mzffus5etUYEHDwGPgSSJIn06BFe/YMjfEN49Lrmvgp/AgabgRfAryNJ
      MuHI7nbGCzjYDHwIFBCwkwQCCDjUBAIIONTsqzLAJ9EqLPHGewvkpo5x7tgkWC1++at3afU8
      zj79PLfe+j6mnOHJC8+QMnZ/CF/A4HIgBHB7q8ZLL7/E9cvvY3uTaFqU02dOs3J7CdtpIOlD
      PHHmBImQ6g9C6b88L6hQPewcCAFI/RFDsuSv2iPJEr12E1tISEJhKBvl9gfvkj/xNJNpIxBA
      wF0OhADGUwY/+OEPSQ3PYtXWaUoRbt66Tafnkcpl2SiV6PUcJnXl7rQdsiyjqgfi9gM+Awci
      BWQmj/Pbkx+uih0Hcp976e721MTk7hsVsC8IaoECDjWBAAIONYEAAg41gQACDjWBAAIONYEA
      Ag41gQACDjWBAAIONQPXENZsNilI9q5cJyBg4AQQj8cZGkp/+omPgWCRvIAgBAo41AycBwgY
      fITwwO2HqZ7td8HdpwQC2IcI1wbXnxBXWG3wHIRj+gftDnguwu6CEAi7Awh//8ee3/W37a5/
      3OmB54DVP99u++dZ/u8Iu+v/vnD9/Z4TCGDwELTrVZqmIJ/LYHdbOHKI2B6tSO6WbuJc/9sP
      E59rgesAHtgdhOt8JEHjmAjPBedOQu7653g2SLL/ApA1kCTor4Elyap/TFYACeT+I1a0D4/L
      KpLqr/mFFu5v92fb0Ax/O+aXj2Q96u/XI4CEdOd8rX++aoC0O3OausLB9Vwsx8JyTRzXoWO3
      MR2TRq9OvVejY3Wod6s0rSam3cNfg8dHEhKykFGEgq7qRCLRAyoAq8Pi2iZup0MPm+7aJk4i
      y9n5qT0xR7S26W69T8e16Tg9Oq5Ny+nRdLq0HQsXCVuScKH/7m97SFiSjJDAiaSJGmki4SQh
      LULESBJSQkTCKcKhGLoWwdDChI0EiqxhGAnCWoSwkUCWFFD64lf0gZqT1HZtenaXjt2hbbbo
      2h0avTpNs0nHbtPsNWiZLZpmg6bZwHZtTKdH1+5iOSaO56AqGjE9RiwUJxxOEU9NoVgK6nYP
      e7tHyA2hezrJSJLcxAhD46OMzEyQTKcOqAC0CCfmZ7l5a4F0LMPEiSi3i/405HuyPsDYc4RH
      niaEICm8/qorHp7wEAh6dg/LNelYHTpWG9M1/XfHpGN3sBwTy7Xo2h2qdgfTNemabSy3Qqt0
      424uJ/rri/36ZyEEqqwSUkOE9ShRLYKuhojoUV9AeoSIFkVXdTQlREQLoyshwlqEiBYhrEVQ
      ZbW/UIaCLCvIkr9gnyTJyJKMJzxcz8X1HFzhYvXt7todGmaDjt2mZTapdat0rDZtq029V6dj
      tWma/loPsiT3l4ySUGQFXQkRD8WJ6XGieoyR6CjHc6cIa2HioQTJcIqIFiVhJJEEOB2bTqlJ
      dalEfaFMu9xEDamE01HyR8fITA8RyydRtHtXsDmYAvB63Li5xOzx04Q1Gadj3j20V+sD7CS2
      a/k5qdPDtHu4wsN0ene3Ldfqi6lNx2pjOSZtq4Plmmw2NujZXWzPwXJMbM/GcW1Mx8RyTcx+
      WUFTNEKqgaEadz9rio6uaJiORc/p0rHadO0uPaeLJut90UUwVIOwFiZhJInoUcYjGU4aZ4jq
      UdKRDJqsEQ3FiOhRDDVMVI+iyPcPq8x2j9pame3VFcqLW9Q3qyiqQmI0zfDxcbIzw6TGs2jG
      /Z/xgRSAa/Yolbcp/KzE0VPHWbl6lZbtEI6mmczF9tq8x46m6GiKTuROvP6QeJ6HJ1wcz8UT
      Lp7wcO7k6J6D4zm+gKw2Hbtz97PlmJhur59oYySMJNFQjKSRRFN0FFlBUzRUWUWVtU9N1J+E
      8ASu41LfrFC8tUF5cZtWuYlj2iRG0mRnhjjx5fPEcglC0dA9K3F+GgdSAEokzcUvvHx3e3wo
      mJr8fsiyjIyMqgzGlDFCCMx2j3apQWW1SGlhi/pGBSSI5RKkJ/McfeksydEMoehnW/TkQAog
      YP/h2g7NYp3CzQ0qywUaW1Xsnk00Gyc/N8rM88dJjWUIxcLIyuNrvw0EELDrCE/gWP4ax5Wl
      AqWlbSrLBYQH4VSE3Mww088cJTszhBrSkeQ9Xig7IOCz4rkezWKd2lqJ7evrtEr+ot6xfJLU
      eJazX3uO5GiaWD65K9W0ruex3qgHAgh4/Agh8ByXXrNL6fYW5aUC5aVtf1FvQyMzmWf+4hly
      s8PoEQNV351k6HoexXaLy9ubXN7eomH2AgEEPB5c26FTa1NdLVJdLVFe2qbX6BCKR8hM5jh6
      8QzZmSGi2TjyLi64LYSg3utxrbjNB4UtFitl8tEYZ0dGOTs8NvgCsLolFldtwt0yyXNHWb+0
      zIlzH10pMmB38VyPXqNDZaVIcWGT2nqJTq2NqqlkZ4aZef44uZlhwqnop9bF7wQd2+JGsci7
      m+us1qtoisKZ4VG+PH+ckVicUH9WwIEXgGPWuHm9Srx+m/G5PDeuLnEsEMCuIYTA6dn0Wl2a
      2zVqG2Vq6/5LuB5GIkIkE2fmueNkpvIkRvyxHLvd3UIIQc9xWG/UuLy9xbsb62iKzFwmxx+e
      Pc+xXP5j7Rp4Aah6lPrmj9n2bJb+r++RyM4Ha4TtIJ7n+avZb1apb1aoLBfoVFt+7h5SiedT
      ZKbyzDx7jFg+SSQVRQ3tXfuB47qsNepc3t7kWrFA27KYTWf45qkzzGVyJIz7txMMvAC08Aj/
      8E//iEpxizd//jqe+gB5v+eweOMyGzWPc0+eZmvhA7ZbEk899QRhbfdXY99o1LldKTOVSpMJ
      RwipKtouxsEfx52CqtUxaZUafq6+UaaxWcVsmyiqTDgVJTWWZfyJGRIjaaLZBIqqPNZ6+EfB
      9Tyq3Q7XigXeWl+l1uuSjUS5MDnNudExorqOLD2YjQMvAKu9xj//7/5Xps8/Q7cs+OYfPMun
      Jh3PITo8x4logWK5RHL0KInqKoVmj+nMo3UX+Cy0LYtLmxv8YOEGjucxHIszHIsznkgylkiS
      DodJGju7+J/wBN1Gm1axTrNQp7paolVu0Co1UHWVWC5BLJ9k/vOnieWTxPNJ9EhoR216GLx+
      YfZKYYurhS3W6nUykQhnhkc5MzzCUCyO/Ahh18ALQAsP8a3f/x3eu3qdxeUbvP3+bV4+N3f/
      MEgNoVtFNnoyR4+M0iqusunFOJYK70lv0OlEkj87/wwd26Le67HZarLaqPOL1WUq3Q4hRSUW
      CjEciTKRSDKeSDIUi6PK8iM9VOEJXNuhvlGhvlWlsVGhVahjdUxc2yWajZMayzL19DzxkRRG
      IowWDn0kZ9+13rL3wXJdFiol3t3aYKVeQ0Li1NAwXz5ylFwkit73pI79aBMpDLwAQKCGkzzx
      1HOcPf80jlARcF8BeN0K71xfZ3ZqlG6rwNtX15mbHaNnecQMdU96g+pAxDDIxRPM5T8cjN+x
      LLZbTZZrVQqtJm9urNFYvIXjeYzGE4wlkkz0PUXKCBML3Zsre66H3TVpV1q0Sg0qKwWqayVa
      xTqKphJORYllE8w8d5zkaJrkWHbX6t0fhTuF2ZValUtbG9wsFZEkmO8XZo9kso81fBzcf6KP
      3S3yr/7nf0Fo5jhPnpwlMzL76V/SYhydGcXxADnC/JExhIBBHLgX0XVmM1lmM1kATMehYfYo
      d9qs1KpsNZv8YOEGTcsirofIRiKMJ5LkVQOxWsO6WaBb62B1TYxEhORohomzsyTHMkQzcYxE
      GEUb+MeMEIKtVpPLW5u8t7VBpdthLpPja8dPcSST/dTC7KMiCfHhgM5vX11mobK38+W8Mj/O
      meEPp0URQuA6NoWVG3zvR6+TOfI0X/vi05+5GrRQKAz0tCjC87C6Fr1ml+p6iY2lLW6tb1IP
      S1hZAzMVwnJd7J5FwpE5Pj3BzHCe8WSKaEjHULVHCp92E8fzKLVb3Cj59fWVbofhWJwnR8c5
      mR8mYRg7fg8DnzU4ZpXv/Jtv01aj5KeOcOL49IGsBnUsh06lSWO7Rm2tRH27SrvUxGx1iaRj
      xPJJnn/iBMmRNLFcEjVu0LBNtltNNhoN1ht1rt+6Tt3skQwZ5KJRJpMpRuMJhmJxspEI6iP2
      x3/cNHo9bpWLvLO5zlK1Qjoc4dTQME+Ojj9yYfZRGXgBgIcWihEPaZjtJuubJWbGc/tWBMLz
      8FwPs9WjWaxTWfZj9sZWDc/1kBWZWC5OZnqIIy+cJDmaQTN01JD6kUYcI6QzFItzdmQMTwgs
      x6Hj2KzVa6zVayxVK/xseRFZklFlmZF4nKlUmolEiqlUGl1RUGV5xxutPCHoOTa3K2Uuba6z
      WKmgKgon88O8fOQo44kkuqLsyVjlgQ+B7sWj1ewSjUc/swB2MwTqVFvUNys0C3XqmxUcy8G1
      HECg6Jo/yGMiRyyf8HP3x1hItRyHYqfNer3GZrPBZrNx95imKMT0EMOxGBPJFLLk1zrFQyFS
      RhjlIUZW/SYdy6LYbmG6Dh9sb7HeqKPIMnE9xHOT08yk0+jK3ue/e2/BQ+GwtrzJsTP7qzW4
      U21RWtwmPZFl5MQEoXgYPaw/1NC9R0VXVcb7Vau/jut5dGyLhmmy0ajz/tYmG406G80GuqIQ
      DxkMRWO+x0imGIsnMLT7t/gKIViqVbi0ucG14jam43I0l+PJ0XG+PH+cmD5YM1LAvhGAzff/
      +i/ZbPRo91xEOs/J8eSnf21AyM4Ok50dHqiHr8gy8ZBBPGQwnkjyzLi/kqYnBFtNv0yx1qjz
      7uY6P15aoGPbZMMRRuMJplJpxhIJMuEoIVWl1u1wpbDNu5vrNMwe44kkF2fmOD82gaF+NHQb
      JPaJAEyqvTj/6I9f4a+//V0uv3mdk//gub026oEZ5ARwhzs2KpLEeDLFeDLFc/ieom1ZlDpt
      Nhp1VmpV3lpfpXCjhaGoRHSNpmmSj8Z4dmKKE/khctHoA3dF2Gv2iQDCzI1K/It/+dece+Yp
      4qmJvTbo0KDIMgnDIGEYHMlk/d6hnofpOBTaLbaaDWbSGYaiMdQ97t/0KOwTAXh4QiWVSoCS
      5MRsfq8NOrRIkoSmKH4BOhTiSL8Bb7+yTwQAEoJWo0ap1vj0k+02b771Ds22zalzp1i8eo22
      KTj/4ovkors7OEMIQbdZRzPCaPrgdC4L8NknApCYOvU02YkpauYDJCI1wrMXXmT99i0kNcKp
      U8dYXFwHBJ7nT00ohMB13R23vFku8H//j/8MIxrnG//Rf4UW2tlenwEPx8ALwDGr/O1f/Q1l
      02VzcYtX/8N/79OrQCXB8vVr6NlxhtNx6qU2RkjGsj3Y5fQnyQrC8+i1m3iut7sXD/hUBl4A
      Qng4joei6UQjUaKRT+8U5bYKXF5YIbZZwj4yzcrSEpblkp6WkPt175IkoexCoS2RzfN7/+l/
      gywrROKJHb9ewMOxb1qCPbvHzWsf0PASPH3u6IHvDBewOwy8B7iDrBkcP/v0XpsRcMDYH60V
      AQE7RCCAgENNIICAQ00ggIBDTSCAgENNIICAQ00ggIBDTSCAgEPNwRSA3eGtX8Je9joAABL7
      SURBVPyMH/7wNbbrXexujb/7u+/RfbTJwwIOMPumJfihUA3OP3OBwuoirmOxtLJIMp3AFdzt
      CSqE3zM04HBzMAUgwcbiTUQsT84t8tZaDcUqU5w+TSQXCQQQcJcDKQC3VeDtKwskEwWkk6e5
      +EKOxZuXSUaNu71BZVlGVQ/k7Qc8BAcyBSixEb756tfu2Xf+2c/tkTUBg8zBLAQHBDwggQAC
      DjUDFwK1220qlZ2fyLzT6VCpVHb8OgGDzcAJIBwOk0js/NBBy7J25ToBg83ACWC3ameCWqAA
      CMoAAYecIAsMOJQIIcBqBgIIODwIz8Er3sBdfwt36zLu9uVAAAEHE+HaiF4dr3gdd/MS7sY7
      uNuXkWQNKZJFHj5N6Ln/IBBAwMFAeA6isYFbuIq3fQVn421EbRXh2SjZeeShk2in/wHKyBmk
      +CiS4i/2EQggYN8hPBdcC9Eu4m6+h7P8Ol7hCqJTAmTkoZOoM59HGX0COXccKRS7m+B/k0AA
      AQOPEALRreDVVvC2P8BdfRO3vIBobSMnx5Fzx9Ge/BM/px8+jaQ++CzcgQACBhLRa+AWruBu
      vIu7/jZeZQFhNpEiWdSpC4Tmv4Q8dAo5PooUij3ydQIB7ALu1gc4Sz9GiuaQwhmkcArJSPlu
      WYv4OZYaQlJ2d+2CQUAIAY6JaG3hFm/4hdXVX+BVF5FCCeTUNMrYefTzf4Iy9iSE/LXhPsuy
      U67jUl0tsfr2rUAAu4HXLuBuvIvolBC9BsJsgN0F1UAKxZH0KGhhJCONZCSQIhmkcAY5lkcy
      kkjhDOjR/rEc0oAseP2oCMfEK9/C3f7Az93Lt/BqK0hGEmX4FOqxr6KMn0dOTvqZhvx4kqnn
      eRRvbrDw+lWqqyVyR0YOqACER7vdwhUKsVgEu9fB9mSikTB7sV6deuQl1NmL4DnguSBchGv5
      YmhtI7pV/9UqIsw6ormFt30Fu10EpwfCAyFA+It7SHoYKTqEFE4hR7K+YEIJpGgeKZxG6u9D
      0f3EI6ugaJ9YENxJhOv072kbd/UXuJvv4hauIqw2kh5DGT2H9sQf+gXW5JTvCR+jwIUQWB2T
      raur3H79Kr1ml/z8KC/+46+QHM0cTAEIu8vt27dpNZqMz8+zfPUmngRnn7tAJrL7YYYkSSAp
      8GsPVgKIZCEze9/vCsdEdGsIuwNmE9GtIMwWol3A69YQ7RJe8QbYHV9QVgthtsC542Fivpcx
      Ur44jCRSbAhJCyPFx3yvokWQjCSEYkh6FEn99DUYPtFe4SFahQ/r37fewyveQLgmcnoWZew8
      oWNfRc7OIWfmdtSbdWotVt+5zcqvbiGEYOrpeSbPzRLNftgJct8IwHUcBBKSJCEr8n1XiZH0
      KOmITKmmEHOqpI49y5y8zlrTJBlS8DwP13WxLGvX7H90JAil/ddvlPXu6cjluQinB64Nromw
      u4heHdGpIMwGXmMD0atBtwGlBd+ztLbA7oCs+t5B0fzPquELJpb3vUk4jRTJQSgORhrCaYjk
      /fORoL2N2H4fUbyCu/Km781cG9KzSKNPIZ/5I5T8cV9kqoEAXPxY3P/0+BBC0CrUWX1rge0b
      a6iGzsTTR5h88gh61Bf2rz/3fSIAi+/+m/+JlnyKeMzga9+4yP3yDdexGZo+hSrfoNSy6FGn
      pVoYWRlFUe6+dP2gFToffv0n4doIs4Fol/yE26v3XzU/JGuX8Eo3/X121xeX1Qar4xfgQ3GE
      2UAKp5Gzc6gnfhd14lnk3DEkPbID9/jxOJZNda3E4hvX2b6+TmY6z5PfeoH8/Biy8sl9PveJ
      ADw8VFavXWLi/POfukaYcHq8/+4lOp7OmXNPIG5c4pYb4ZnZYIG630RS/K4BRO6/3KlwLHC6
      CMcEq42wO75weg3k9CxyzC+T7Dau7bB2aZHlX96kVWowdHSUF//sy6Qncsjqp4dX+0QAIS5+
      5feYmr5BfObMpwpANeI8feHDQfDp88/vrHmHAEnVQdU/fYHCXUAIQbvcZPPqKku/uI7neoyd
      nuKZP/4C4UQESX5wK/eJAFq89qNLtFvXUNdt5v6tr9w3BAo4mAghaBZqLP3iBuuXlwjFwsw8
      f4zJc0cwEo8Wbu0TAUQZTrbojDxPyIgHo3gOGa7tUl0tsvD6VcpLBcLJCGe/9iwjJyZRdPUz
      NYrtEwGYrC2XMMNdhmfPIWAgXHHAzmL3LIoLmyz89Ar1rSojJyZ4/h+9RHoyf9+C7cOwTwSg
      EYqFiKdzJOO7V7MQsDdYHZPVdxZY/tUtzFaP0VOTPPHq8ySGU0jy4/X/+0QAJq6S5+LFiyiq
      FuT+BxDP9fyGq7cXWHrzBpqhM3PhOFPn59DC+mcKc+7HPhGASkhU+M53vsPQzFm++OLZQAQH
      BOEJKqtFbr9+ldLtLWL5JGd+9xmGj0+gRx68W/OjMvACEJ7D5V++jpOc4ncunOK9K2vs/LRZ
      ATuJEAK7Z1Ne3GLxF9eprZfJTOZ55o+/QGYqj/IA9fePi4EXQK+1zpVlh5eeifDP//wv+NN/
      +u8GVaD7GKtjsvbeIotvXMfqmIydnuLUbz9FciyzY2HO/Rh4AQhhs/z+r/h2NUS33eTy5RtM
      f/HpoCp0HyGEoFNpcfuNa2xdXcWxbGaeO87UU3NE0rE9Sfh37Bp4AUSS8/zn/+y/2GszAh4B
      z3Gpb1VZfOMaGx+skBhKceyls4ydmUYz9qYfVs+xqXW7rNSqLNeqgy+Ae3GplJqkc6mgEDzA
      eK7H1tVVVt5ZoLJUIDWe4anf/y2Gjo6hhnZ3TILlOmw3myxVK6zUa2w06rQsk5CqMpvO7jcB
      eNSrDVKBAAYOIQR212Ljg2WW3rxBp9pm5MQEv/Xv//aO1N9/3PUdz6Pr2BRbLZZrVW6Vi2w2
      m4AgYYSZTCT58vwxJpMpUuEIiiTtFwG4fPDLn7NabiGrBomxUbLR3R/dFPDxdOttlt68wfr7
      SyBg/NwME0/MEh/a2d6hnhCUO202mw1Wa1UWqxUqnQ5IMBKLM5FMcXFmjkwkQj768WWNfSKA
      LtduVvj8S6f4wfd+yI9eS/IHv3t+r416IIQQuI6NJMkoB2A2aiEEru1itrtUlouUl7bZurqG
      GtKYvXCCqfNzqIb22Au2nhDYrkut12W5VmW1VmWpWqFlWaiyTC4a5fTwKBOJJKOJBIaqoT6A
      19knTyRMNt7j+z/8KZH8GMnMo0+Dsdv02k2+97/8D6h6iN/+x/8Jqra/BuH4dfYW7VKT+laF
      6mqJynKBbr1NKB4mMZzm3KvPM3R8/LHW33tC0LVtCq0mq/Uay7UKa3U/fk8ZYSZTKV6cnmU8
      kWQsnkBVHu3a+0QADrjgqAmeu/Ayo+n90x+o125S3lxB1XQcy9wXAnBth9p6mdLiNtXVIs3t
      Gr1Wl0gqRnoqz9znTpGZzGPEw3eHGT4OOrbFaq3GYrXMUrVCtdulZZnkozGOZLKcHhplMpUi
      pusY6uPxMvtEABqnn30e680f852//Qn/5N/+6r5pDEsNjfL1f/pfIskKRjS+1+Z8BMdy6DU7
      NAt1Kkvb1NYrVFYKqCGNSDpGaiLH5Pk50hM5wqko8Nnm5IH+TA39cKbUbnOrXGS5VqXUbqEr
      KplIhCOZLC8fyTKRTBLpZxo70V6wTwRgs7a6xdFnv8Iz0ci+agSTJJn85JG9NuMunuPSrXco
      LxeorpWorhZpl5tIkkRyNE12doT5i6eJ5RNEkrGHGl11P1zPY6vVZLVf/77RqFPpdghrGmPx
      JOfHJphIJMlEIiSN3Ru6OvAC8Dyb2x+8x82Fq7z7l9/mC3/4p3zlucR9q0GF1eLNt96h2bE5
      9eRZVq5epdmxOPvi5xiJPz6X/aC8ubrC925dR5VlNEXBUFVCiooiyxiahiJJGKqKrqiEVBVZ
      kjA0DV1W0BQZVVYIa9rd78qSjCxJyBJISMiy5L9L/qwZEiBLEghwTJt2pUlluUBltUh5qYDn
      uqi6RnI0w9T5OdKTOWL5JIqmPpZ+9q7n0XNsNpvNfuxeY6VWRQARTWMymeaFqVlm0mnS4Qia
      ovj27gEDLwCrs8lf/+XfceyFF3nieIgLz578VA8g6THmj0yxuFJA02M89+ILLN+4gSpLeJ4/
      uZTneTiOsyv3cCybRZNOYLkOluvSc2ws18XxPHq2jS0EzV4X23Wx+/bZnofbf9nizmeB7bkI
      QJMVVEVGlWV0xRdNSFFQZQVFltAVFWyXTqGOWWmh2ALZFaSOpsiN50gMpYlGDBxFoSJJ1DtN
      FFlG639fkWQ0WUaSJDRFRpE++V93haBp9thut/oF1iqFVgvHc8kYYcYTSV6ZO85UOk06HP7I
      b3mui7fDz+CTkIQQdztXfvvqMguV5h6Z4vPK/DhnhtMf7hACq9emsLXJ2798E23kNK9cfPK+
      IhBC0GnV2VpfQ02PYZfXSI7Pk0tEAIEQgmKxSD6f3+nbeWg84dvn9t89BJ4Qv7EfTMfGdBw6
      rS6bi5sUbm/R6nTxFAlJVwiPpYmOpJA0BdNxMPvis1zXF5rr0nVsbNdFQkK6402k3/gMdz2L
      77UkDFVDV5S7Ofdms0HTMvGEYDyRYjqVZiadYSQeJ/yA1ZF7xcB7ACQJPRxjYvYoE7NHH+gr
      dqfO+5cu0bUlTiYjXFrYIlGocOLJC4ykDD9MkCTkAXwwdyz6uGY+u2fRrbeprBaprBRpbFZo
      FOoY8TBH8kmyZ2ZIjmbITA89VF8bx3WxPRfb9UMXx/OwPZee4+B5AtNxsD0X03E+FJDn3vVi
      z01OM5ZIMpFIou+zto79Ze0DokdTXPjcF+5uv/qNwSmEPgyOZdPcrvkF1tUS9c0qZquLZmik
      J/NMPNmP37MJ9GjokWtJVEVBVRTCGiTY/TLSXnIgBbDfEEIgXA+rY9Is1qmuFCksbNLYqoIk
      EY6HSU3kOPbyWTJTeSLJKJIi71k34oNEIIA9wvM82uUmja0q1dUildUS7VIDSZaID6VIjWWY
      /61TRHMJotn4QIZrB4FAALuA8ASu7dCptamuFO/G8Fa7h6wqxHIJRk9OkhrPkhhJoxka8iM2
      7Qc8HIEAdoHNq6tc/ps3Mdsm4VSUzGSOIy+cuJvgd3MMbMC9BALYBeL5JCe+cp7MZA49aqAZ
      OzfNR8DDEQhgF4gPJYkPJffajICPIShZBRxqAgEEHGoCAQQcagIBBBxqAgEEHGoCAQQcagIB
      BBxq7mkHiEseWfnxrtv6sHjdNtXqzl+n2+1S3Y0LBQw09wyIcRwHz9ursTm7S7lcJpu9/9Kg
      jwshxK62/Lqui7JLfYk8z9u1jnqO46A+5vEG9/za4/7xQeZgLpTti02W5QP5LCVJQtMe74yA
      QRngALJbuf9usxOiDgTwSQiXhQ/e5ic/+wXVtnV3t2d3Wd3cptdu43gOPfvOwHqbra3yx/6U
      3Szy2mt/z+tvXqJrf1yIKei223iOSc8R4Dm0O+YjmX1nuOfO0OOXr73Gaz/9OeWmSXl9gZ/8
      5KdsVNp060Xev764Q9f1edT7uvLLn1O3PYTd4Mevv3vPsYPnJx8XXouVossLF55AyB6L1y7T
      FBFOTGcpVeuo3S5CqvHm9QrPPvsc41mV5RtX2C6PcGJuhK5jEKGDHYqjdLtMnXmGaH2T7VoN
      UVrDiQ4zOxzjypVr5KeP49RKeK0F3ikluXh+mnpLZsiscWNpm2OnT9EtbbBWqDJz7BSpyF5N
      DGwRG5rnyTGJyxubuLUqF158Ac/12F5Zolbu4TA7eIlKarO0WGJMK1Nqt+i0GkhaBLvdCDzA
      J6IkOHc8xxs/e4Nyq0mlCTlRZrHqe4NKuUw8nWP6yFHySX8iJz2SYjRsslBos7xwk8WVVRQJ
      wOXyWz/n/eUt1Moy1dAI5vYKa+sLrFd6CM+lWq6SGxpmeu4YiZBDqdrgys0VZmZGuPz+ZVZW
      txkbzrO9tbV3/wmweuM9fvLWNdJpDUVLoykKugrbxRaTMZNbxUfzXDuJEh1D6m1S6jgMJ8NU
      CxvUWj02FhYDAXwiTpfNUot00qDbs2nXSqxXukT1D92wGgrTLK5Tb/sP3WzXWSvUiYSjZLQW
      JTtCSJEBhTPPvMCXXv48uUySZmGdWtcmEh8iF3W5tbgOgB6OUVpbom06IMlo2KyurqMZYaKJ
      NMl4AlXd2yUCJ489wRe/9EVmhsaQ7Q3eu3yZlbVVGu0uVVensrywp/Z9PBI5rUfZS6AroKsS
      yws3WC1U760GPUwUCgWGhoY++QTh0WzUsDyFVFLlvV/dZub4LKlYGMtxkTyBGtJo1WsoRpyo
      odCs1bBRSSYMfvXT15l64nlGUmGEY+NI/ixvIGhUKwgtTMxQqVbrRBNpZOGih1RqlRqReBwh
      ZBQs6s0uyXQa4bpoqoLjuo+9JuTB8bAsD133gxzX7lGtt4jGYyiyjqZKmJaFEdr55U0fBsuy
      UCSBLRTwXEKaTLVWR9MjgQACDjdBCBRwqAkEEHCoCQQQcKgJBBBwqAkEEHCoCQQQcKj5/wH/
      AaYMrlv6tgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='WR' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29WZBkV3rf97tr7ltlZu1b19LVO3pBA90zAAaYRSA1JDUSKZKyLCocoqxQ
      +EF+cNgKv1q2H+Twg2TTC8NhkiHJFs0gR0OKO2awNjBYeoDeu5aufc+lcs+7Hj/c7AYa6A1A
      dVVW1f1FZN17M2/l+TLz+5/znV0SQgh8fA4o8m4b4OOzm/gC8DnQHFgBlEql3TbBpw04sAIw
      DGO3TfBpAw6sAHzak0ajAUCtVmMnmmd8Afi0FfNzcwDcunVjR9JTdyQVH58nZGP+Fmvr6+Rq
      NtnJq0T7x1mencHe2qBoOXT0jiNyU8ysVjnzwhkWL0+TGB2ivniHpgtDJ85TmrrE9Kbgle9e
      4Pq7H9B5+DTV+Q+YLSh85zvP8rN3PqTuuGQTQV8APu1F59ARjhw9ykcffUBXbzef/Ow90uNn
      cWSVYyM9XLt5m42CxcTEKEFVpqP/MKcmOrnhwHCnzkxpE0N00BkoUDIMug8d4+hIhLfnM2SU
      PCXbZezEOYzGFkfHenwB+LQX6XQagO6eXtRgFEto9GfCXLu9yHvFIqfOnKU3OcPU8hZdg/10
      d3sunFucYqvazalnjrNQKlCLDNARjbVinAiJGARjQ3SEo6CCHVZADiAd1J7gjY0NOjs7d9sM
      n0dQya1QIUZvJkqlVCWSiD2k0upQLjWIJ6JfOo37BFAqlQ5M82ClUiEWi+22GT67zH0h0E9W
      tpgpVHbLFgBeHevjRFdqR9LySwAfvxn0KSOEIL+yQGlzbbdN8XkAvgCeMpXCBn/6v/+P/Mlv
      /fcY9dpum+PzOfxWoKeMrKiEEylUTUdW/a+73fB/kadMJNHBL/zT/xYkCU0P7LY5Pp/DF8BT
      RpIkAuEv3zznszP4dQCfA41fAuwA1tRfYv7s3yKHO5AinUih5L2jHO5ACqdBCSCpAVB1UHQk
      2f9pthvhOuCY4JgI2wC76QtgJ1A6j6MeehFR3UTUNnALM4jGFsKoIJpbYDVBDyMF4kiBGJIe
      QQp1IEWzSHoUKdaNFMl4r4VSSEoAKZxG0sO7/dHaBmEbiGYJ0dxCGFVEo+id1wuI6oZ3Xc97
      37lZQxhlMGu+AHYCOdFH4Pxv3rsWrg2OBa6NcCywGohmCbe2gajlEc1iSyybuLkp74drFBFC
      IEkyIEBWQNaRImmkUAo5nPGEEoghRbJI4RRyrAcpmABJAVkFWQZZQ5Kk3fsyHoMQAoQDrgOu
      Da6DMKuIegG3uu5lHLWNT4+1nHduVkG4INxPv6dADDmc9jKSUAo5c9jLOEJJ7zrW7QtgN5Bk
      1XNI4J4rJvpQOPbQ/xGuDWYNt55HNEpglL3z2iaiWfbEsvwhwqiBVUdYdUSz5BX5etT74YNx
      5EgnUqB1HUkjhdKecNQAUiAOWth7Xd3+FithNxFmHcwawmp4ojbK3rFVOopmyculG0XPsRsF
      kGQkPQKBGJIWQgokkEIJpFAHcvao58yRNASTSMG4V3oGE0iy8libfAHsESRZhWACJZh45H3C
      NsExvBj3rqMZZUR1HVEv4lZWEEYFd/MWYi7XCg8KoOie86sBUIOeCFphmBxKIYUznmiinV4Y
      dvchSV6ubVQQjUJLoEVEebXlxEUv965tIJplsA2E3QTbALsBeuzT0ioQR4p2IWePeOmGM15u
      HUyAGkDSwp6danDbSjFfAPsMSdVB1ZECMYhkHnjPFwYACxfMKm5lzXPY2qYXOzcKuNVNnM1J
      ROVNhGN44ZrtHZEkpEAMYVQBF5Qgkhb0KvTB+L1QQ0r0ofWe9ir+gShSrKvl7J1eePb5z7CD
      IZovgAPIFxxMUh5bugghwG4ijIonAqPilSxGxat3BOKgR7wKvBb2ztu4rnEXXwA+T4QkSaCF
      kLTQbpuyrfgdYT4HmrYXgBCCUm6dQrkB2Kyv5XB32yiffUPbC8CsrfL//f6P+NH/83tM57b4
      4K2PfQH4bBttXweQZI107zDff/Us/+53f4+yGN5tk3z2EW0vAC2U4fs/902WZhb4O//ov8Ct
      Gzy+e8PH58lo+xDIMYr88Pf/gJWGS0TTSSZifL5xTThNbl2/TrH66YR+IQTLC/NYLuRWZpme
      X8U9kOtf+DyKtheArEUYHe5ieX4R6yH3zNy4TjCZZPLmLZyWk1fWZvj4ym1q9Ty3F2sYuSU2
      Ko0ds9tnb9D2IZAs6wyPTaAmve7zqdkVRscP3adcQw4w0tuLsZXDckFya8zmHY4MphDVPInB
      cUblJeYbNtmIg+u6OI6DaZq79rl82oO2F4BZX+dP/+Idhvs0/vVfvsY3Xv0Fxj53j2I2KFar
      lOsuqgz1Yp7c2hJT68tMnD9PtbbMul4h2teDoij3Hrqu78pn8mkf2l4AtlXBqMtIoSDCDhAP
      SAi4rx4wcfI4H37wCUPHTtMsLOPGBvnOdwcp5TcIJrPk526wYSU5ldhfvZg+X58HCkBYZTZX
      qqTSCkuTGwyeGKW0uUl57jamq5I+fIb0Di1eFYj289LLJhbw/V8cJRwOfqESLKlhzl+82Lrq
      u/d8Iu0tfNU7epzeHbHWZy9hGdaDBSCpYazyLE1ZwxE2za1lHDVLMDPC4KE0y9P5HROAooY4
      fPx460pgmfaOpLudOLaDaztoQT/k2m2EEFhNi5Wrc0y/df0hIZCkosiCcsmmIx0mv1ik8/Qg
      i1euszEtGLjw7R02+y4mN6/OcPzcsT3VF7B4eZrpt28wcGaUoXNjBOP+VMbdQLguqzcWuf3j
      T2hWmww/d/jhdYBkQmNm1aFnMMTinTwDCsSHT9KXVCkVC4iO2A4OdxXUqxVM22X48BC4AuT2
      H2p7l75Th7AMmzuXbjL73i0GTo8y/Pxhwsko0h76HHsV4QqKyzlu//gKW8t5Bs9433+kI3b/
      6tA/vDnfpovj1vk3/9vvEu9OcfXKDU5+5x/wSy+Mf610dmN5dNu0WLu5xNz7k2wt5+ia6Gfk
      4lFSgxlkue27ZPYcruuytZxn+s3rbEwt0//MIcZePE408+m8h7ZvBfJQCAY19ECAvpFDmMXy
      bhv0lVB1jf5nDtFzfJD87Doz79zgvd97jY6hTgbPjdJ9ZABF3UvBXfvSKNe59Vc/Y/XmIome
      Di78w+/SMZT9QkazRwQAvb39GNEOfvCtnye6xyuTiqrQOd5LdrSHaq7E/IdTXPkPP+XGn19m
      /Fsn6D0+hBbS225GlRACRwhs18FyXBzXxXRsNEVBkxVkWUKTFVRZ3hXbhRAYlQZzH0wx+9Pb
      xDoTPPvrL5EZ6X5oCbtHQiBolDb4kz/8f8kHjvKP/5Pvfe1KcDvtECOEoF6oMv/hFAuXp1E0
      lYEzI/SfHiGaju+IDa7rYjg2NdOibpkYtk3VNKiaBuWmQc0yqBgGTdumaVk0LAvDsbFdF1mS
      CGkauqIQ1nTCmk5I04joujd+KxS699zdR1QPIG+jSCzD4s6lm8y9P4mqq4y+cIyB0yMo2qPz
      +D1SAjR4+7U3yUy8wMvHDrf/AKYviSRJRNIxjr16ltEXjrF+e5mZd24w+95teo4NMvbicSId
      UaQnqCcIIXCFuHd0hKBpew5bNprULYuK0aRmmtRMk1KzQc2yqJkGrisQiNagQYGmKET1ABFd
      Jx4I0hdPEtF1orpOIhi85+xN26JiGNRMk4pp3Hv/fK3Gkr1F2WjStGwkyfusEhKyBLqiEg8E
      ieieSKJ6gKCmkQgEieo6sUCQgKoiS9K9h/K578CxHVZvLDD1xjWshsmhCxMMP3cYPfRky7q0
      vQCEEFS3KqT7urj84SXKTcEvfvvcFzrD9guBSJDBs6P0nRxm7dYi8x9O8fr/8idkR7sZPD9O
      fDiLjcCwbZq2Tc00qJomVdNzwK1mg0Yrh65bJlXTxHZddEUhqKoEVRVdUb3cWQ8wkEwR0XRi
      gQAhzXPuiK4TVDUCT7ice5wgndFHbzdlOQ41y8S07XtCuSvCmmmQr9dZ2CpiuQ5Ny8KwHeqW
      iSLLRDSdsK4T1jRigSChlkiCskLu8hzlO+v0Twxw+oUTRGNhFOXJ3brtBdCszPI//Yv/m2/9
      yi/TEcny8itn910JAC0HMU1qlkm52aRqGlTCFpXnulnqdLlS2cK+dRltJYyDwHIdTMdBUxRC
      qkYi2MpJgyE6IzFCmkoyGCLSysFVWUZXVDRFRpOVL+SkTxtNUUgqjx6KIoTAbtUrLMcLyUzb
      pmIaVA2DUrNJxWiyurDGtVIFJ6BgxzWsE1FuqWXe/PinaLKCpnqhWKJVukR0nUTQC8PigQDh
      VommKUr7CyAYO8R/+V/9Z7z1zk+ZWpoj9uFtvnP+yJ4SQd00WdgqUjKa1E2TcitEqJoG5Vbo
      0LAsNEVGlRU0RSagqIRbMXTvcA/jLeeuzm5SuLGMXDc5fHqc0XOHCcbvd6x2qzw/KZIkeRVq
      5Ys1PCEEtXyFqTevEbie4/x4H+PPnyDencJ2XS/DMLw6S6nZpGGZnmBMg7Vqhaph3Ms0LMe5
      VyrumUowgBAuzYZBMBz62iHQTlaCP1pe5C+mbhFQ1XsxdUTTiQYCXgzcCkF0VSWgKOiqSkjV
      HppLG9UGix/PMvveLVzHZeDMCMPnDxNO7c99CGqFCjOXbrJ8ZZbUQJbRbxwlM9L9pYTutVg5
      NG0Lw7ZbFX5zbwlgO9lJAbhCYDnOfZW5r5tLCyFwLJvlq/PMvneLerFKeriLsReOkRrIIit7
      qYx8MEatyZ13bzH/wSSBaIjDL5+k59jgtn62tg+B9gOyJD1xhfJJkSQJVdcYOjfGwJkRcjOr
      3Ll0i3d/56/JjvUyeG6MrvFe5D3YsWYbFivX5pl84xqyInH0e2foOzmMGtC2PS1fAPsAWZbp
      HO8jc6ibrZUCCx9N8/EfXiIYDzP83GEGTo88FefZToQQuLbLyvV5pt+6TrNcZ+zF4wyeG0MP
      B55avcYXwD5CVhU6BrN0DGY58r3T3HnnJpOvX2XqzWuMXDhC15F+opl421WShSvYvLPK7R9f
      obJZov/kMIdfOUkw9vRHzfoC2KcEoyGOvXqWkW8cYeXaAvMfTHL79Sv0Hh9i7IVjxDqTu20i
      QgjKa0Wm37rO+uQyPccGOf2DCztqmy+AfU4wFubQhQmGnh1nfXKZqTev8eb/8Wd0jvUy+s1j
      xLtTqPrOuoHn+FvcuXSD5avzpAYzfPM3XyXeldzx0skXwAFAkiQUTaH3+CDdE30UFjdZ+Gia
      d3/nr4l1JRm5eISeowOPHTezHRi1JrPv3WL2vdtEs3HO/dqLdB3uRX5A2/9OsC8E4BhlPvjw
      KgMTp+jNxMAxuP7Jx1TcIKefOcnslUtsVBROX3iWZLC9K4NPG1lVyBzqJj3UxdiLJe5cusnV
      P36fyZ9cZfDcKAOnR9Ej21vp9KYhmix8NM3sT2+jBTSe+cFFug737ojoHsW+EMDkzUmOnD7N
      zM1JutJnUITE8NHTbC1OspbPYykdvPzyw/ffOohIskS8K8npv32Rw6+cYuXqHHMfTDH5+lWG
      nh3n0PMT29KxZhkWi5enmbl0E+EKRr95lOHzh3fd8e/SHlZ8TVwtSDwcJhqSsV1QVZ2tuatM
      rZZ5pm+QlWurvPbaJqcvXCQZVPyFsT6HGtYYfH6c7pODrN9aYvbd2yxcnqHrSB99pw+R6n/w
      VkuPREBudo2pn1ylVqgy9OwYg+fHCERDOMLFaZPvfl8IIIzF5MwMWw2ZIbNGzRE4Wpz+DofN
      tRzZkVHcrXVKDYt0RPcXxnoIuq4TvXCUkeePUJjfYPrtG3zwe6+TGsgw/tIJ0sOdj825Hduh
      uLDJ5OtXKS7lGDw7ysV/+B200NNry/867AsBDB89zsLcMn3HjyC5NWQtgiq5uIlOBvq6Kawt
      0ugaZiDtr8bwJEiSRHq4i9RglsLcBguXp3n/375OvDvJ4Nkxek8OPXC8fWmlwOTrV1mfXCY7
      3sM3f/NvkOjpaEvHv4s/FsjnsQhX0KzUmXt/koWPppEUmUMXjjB0bgwtqNOs1Jl55yaLP5sh
      2Z/h8LdOkhrI7InxSPuiBPB5ukiyRCgR4ej3znDowhEWPppm+ZM73Ll0g2RfhuLiJqFEhLO/
      8k2yY717wvHv4gvA50sRjHmjMkcuHmFzZpXlq/Mc+e4Z+k4O7cmV73wB+Hwl1IBGz7FBeo4N
      7rYpX4u9U1b5+DwF2q4EqFQqbEgP2wtme9Px8Wk7AcRiMTo7d2blab8VyMcPgXwONL4AfA40
      vgB8DjS+AHwONPtSAMKs8cG7b/OTN94mVzGwGiVee+3HNJ5+45LPHqPtWoG2BS3E8VOnWLwz
      g2FazM/fIRwL4whvcsbdh+u6u22pzy6zLwUgSTK1rRx1CwKFO9xeraKaefLlGqFU8J4AHMfZ
      bVN9dpl9KQCzWmR6doF6wyHeeZznTndzZ/I64YCG0pp7Kssymnawp0f67FMB6NEUF194+b7n
      slm/08vni+zLSrCPz5PiC8DnQOMLwOdA4wvA50DjC8DnQNP2AjAbOW5PrrLwyTVKGNz4ZBK/
      +8pnu2h7AdjGFlO3l5i9ep3N6haTN+d8AfhsG23fD6DqEUqrb7LuWsz9h78inh7bt1uk+uw8
      bS8ALdTN3/2NX6ewucb7717CVdu+0PLZQ7S9AMzaEv/qX/4OQ2eepZEX/K1fOc/jFtIWVp3L
      l39G1ZQ5dfYc+Tsfs1yWefb8aSI7vBa+T3vT9t6ghTr5wS//PFdu3mZ2fpLLV+/wyjOjjw6D
      lAAnTp9jefoWlcI8G1aaC+cH0DSFzyyEd9+5z8Gk7QUAAjWU4NTZ5zh55hy2UBHwSAFIskJ+
      ZZLNmsNI1CCX2+L9t+/Qc/wChzLhe0OhbdvekU9gWyaKoiLt8O7sPo+n7QVgNTb5d//nbxMY
      nuD00UN0dB967P+YtS2W1ws06yaVgWN0h/IYtoIiSzs+GrRRLfPjf/O/Eo4n+dav/ee7thOK
      z4NpewHokX7+m//hX7CxMMlf/eQSDRKcPvZoEWjhBGfOPYdAQlUVhjvTOC6ou7BnbrNWZX1u
      GkVVaVRKRJIdO26Dz8NpewHYRpEf/fsfUlMjZAdHODIx9NhmUEmSUD+Tu0uKirxLGW8i08W3
      //4/RZJl3/nbkLYXALhogSixgIZRq7C8mmO4L7Nn+gJkRWH45LO7bYbPQ2h7AWjBDL/067/a
      unKpVhp7xvl92p891ixhszS/it946bNdtH0J4GHx13/0B6yWm9SaDiKV5WhfYreN8tkH7JES
      wKDYjPGf/r2/RWdK59r7t3fbIJ89hrAaiMYWbmkJZ/069vJl7Dtv7JUSIMRoj8Rv/+4f8cyz
      Z4kl+3fbIJ+njBAuCBdcp/WwEcIBx0ZYdbDqiGYZ0SwhjDIYldZ5xXuYFUSzAkbZu3ZMQPI2
      7JMkwDvuEQG4uEIlmYyDkuDIoexuG+TzJRDCBcdEmDXvaFTBaiDsBsKsf8F5MSq4zS2wm97r
      Vh1hVsE2EM0yyDIoASQtDHoYSQuBoiMFYkh6zDvGepCCMaRA3LsOJrx79AhSINY6j+4VAYCE
      oFreIrdVfvzNQmA7NkJ4HWGu4+ACqqLsypadbqOIu3YN9unYI2HVvNy4UfCc1qgg6gUv7DDK
      iEbRy80dG4SLcC1wbS9nV3SkQBQpkGg5bAz0GErqkOfcgZYTBxPedTiNpARAVkDRkBQNZA0k
      BaF4fT9CCETraLkOluPQtGxqlolh2zRqFjWzStMu7hUBSAweO0e6f5At44v7034eYdX4+OOr
      VCoNxo6NM3V9BgnBkecu0hMP7oC99+PMvoXx3m/tWwFIigZqACkQBzV4LweWtaDnvOEO7/lg
      EkkNIoVToIW8+9T7fw8hhLeTvPup8949N2wby3GoNQ0Mx6Bqlr1r06Rp2zQsC8t1qFsmTcum
      advYroMsSWiygqZ4w2HchoVTbSLbov0FYBtF/uwP/yN5w2F1do1f+if/6PE9wXqU3myCGUsi
      Eg4R1BUcVAKqjOM49wbDWdbOrJYrxl5FH7i4bwWAonshifJFdzIdp/Wwadg2hmNjNV3qlToN
      u0yz5bQVw6BpWzQsC8OxcVyB7Xr/67guluMiEGiyTEjV0BSFsKqhyjIhTSOoqiQjEXRFJaxr
      hFSdkKYS0nQUSUKVZeqrW6xfW6QwU0AYNl0Tfe0vACFcbNtF0XQi4QiR8ONzcNdxSPeOIpxp
      NlcW0DMj9Kmb5KsGqVAU8AbDqeoOfnwt89STcFsCc4VAIBB3FwNund/3/Gded/HWSrVdF8d1
      cT5zbrve+qmm7eAIF8t1cYXAcmyE8By8bpmYjkPDsmhYJg3bpmlb1EwTIUCWJGRZQpEkZElG
      bjlkUNMIqSqaohDTAySCQUKaRljT0RWFkKYT1XXP2TWdYOv3kiSJVjUWWucPwrEdarkya7eW
      WLoyi1FpkOxNc/zbz9B7bAg9HGh/AWjBNH/7H/wGrtVk6tZ1NudXGUyOP7IUcMwaVz7+hIat
      cuzEBOWb15l0VE71B++rA+xUfWDl9hJT1+/QcbiXZG8HTivZT53NaTmT51SW67SczDvarhcG
      GI6NaP2f7bpeKea69+5zhOuFEK64d+0KgStcXNdzaoEnBMf1clTP0T1hyJKEInkt45oiI0sy
      iuwZq8te/UmV5fuOmiyjKQohVSMZCtEbjxNSNQKqRjSgoysqqiyjKwoBVb13HXiKmU+9WGX5
      6hyrNxcprRRI9nYwdG6Mrol+opn4fb972wvgLrIWZOLkuSe6VwvFOX/xxXvXmW+8+Ii7nz4z
      coPXQmWk5QrSqoxjebnq3Qk5kiyhaAqaonrxqqK04lbZK6lkGUWSWk7jOZ/acrywrqHJ3v+p
      iowite6XJRRZQW05sfecjCorXkjwmTS89GQkCe7mp3Lr/K6zSPeu73/+8/ftBsIVmA2DzelV
      lq/MUlzKoQY0uo/0c+oXniPWmUDRHuzqe0YAe5nnR0Y43NONJnvOX5zboDi/wdZCjkauTCQW
      JjPSTXqoi1R/mnAq+tAfzOdTLMMiN7PK8tU5NqZW0II6neO9PPtrL5EazKI8wfB3/1veAXRF
      oSsau3edfSYOz4xhNU0aWzXy8xvk59a5/ucf4touoXiY5ECGrvFeMqM9BCI733LVrgjXpbRW
      ZPHyHTamV2iUamRHe3jmly6QGekiEA19qffzBbCLaEEdrVsn3p1i+LnDANRyZXKz62zOrHL9
      Ly5jVJuEU1Eyh7rIjvWQ6E4RTESeKHfbL7iOS2Vji5XrC6xcm6dRqpE51MXYC8foOT6IFtS/
      cgjmC6BNuPsDRrMJotkEQ+fHsZom1c0yW8s5cnfWuPrH72MZFrFsgmR/ms6xXpK9aULJyC5b
      /3Sob9VYv7XI6s1Fiks5Ih0xBk6P0DXRR7w7tS31Dl8AbYokSeihAB2DWToGsxx6/gi2aVHN
      lcndWWNjeoWVawsgBKFEhOxoN5mRbhJ9afRQAFnZI+McP4MQAqPaZLMV1+fn1gnFw3QfGeD4
      q+eIdia2veTzBbBHkGQJLaiT6s+Q6s8w/tIJjFqTyvoWhYVNcnfWmP9oGgQkejvoGMySGe0h
      lo0TjIV32/xHYjUtCvPrrN5cZP32MghBdqyHZ3/1RTKHulGe4lpOvgD2MIFIkMCIl/OPvXQc
      o9qkliuzMb1CbnadO5duougasc4EmUNdZEZ7SPamkRUZSd7FZkshcG2X8kaRhY9m2JxewWpa
      pIc7Ofn986SHO9EjwR1pWvUFsE+QZZlQPEwo7jWpAtimRX52g+LiJuuTy8z+9DaOaZMe7iI1
      mCUz0k0kHSP4JVtOviqu7VDNl1m/tcTytXlq+QqJ3g6GnztM/zMjBGM7Y8dn8QWwj1F1ja6J
      Prom+jj88kma1Sal1QKFuXXWby9z+8dXCMZCJHo7SA930jHYSaK3Y9vj7GalwfKVWVZvLlJe
      KxJORek7NUzXeB/RbGJX6yv7VgBWPc+f/PHrvPKD73PtrTepujrfeOmbxIMHc2tUWVUIJyOE
      kxG6j/QjhMCsNSku5Vm/vcTC5Rkm37iGJEkk+9J0TfSRHuoklIyghx4/Avez3H3v3Nw6K1fn
      2ZxeRQvpdE30c/zVcyR6O9qmki6JzyyQ+cOb88wUKrtpD6+O9XGiK/X13kQ43PjkKkJY9Pam
      WDR7GJFXWdW6GEl7SyPmcjnS6fT2GL0PEEJQy1fYWspRWNikuJijUagSSkboGMySGsyS7EsT
      ycQfWn8QriA3vcr67WU2p1dwHJfseA+9xwdJ9WdR2zDz2ZclQHlthltzy7i1PK52HDucxlZc
      1KCELMsIIZCkT5dJ9PFIdKVIdKUYOjeOY9lYdZPNmVUKC5tMvXEN27BQAirZ0R46BrNkR3vQ
      QgGquRKr1xdYvb6AWTdI9mU4+r0zdE70oQX13f5Yj2R/lgAtVmZuERsaY+b9dyiKMBeeO0tI
      85x+Y2ODzk5/8+wnRQhxr1NufXKF0mqBerGKHg5gGxapgQw9xwbpOtxHOBXdbXOfmH1ZAtyl
      d/QIAKe/8a1dtmTvI0kSsc4Esc4E/adHsA2LWqFKLV8mlk0Qzcb35MK/+1oAPk8HSfI65ZK9
      HSR79/Z6p20ngFqtRqHw9KcO1ut1CoXCU0/Hp71pOwGEQiHi8fhTT8c0zR1Jx6e9aTsB7NRc
      3R2fE+zTlrRHb4SPzy7hC8DnQOMLwOdA4wvA50DjC8DnQLNPm0EEtz5+j7UynDp7hsrybTbN
      MKePj6Hu4kQQn/Zjf5YAooEhZXj5pYt0yEVWjSTdaoO1cmO3LfNpM/ZnCeAK6lvLvPbjFY4f
      ShHNTpCRbeYNB8dxcF0Xx3EwTXO3LfXZZfalABxL0DU0jFXeoqZE2Jq9xg3Fov94H4qi3Hvo
      ensP1fV5+uxLASiBMDFdptbRzUBvF5nQKhU3QNZfYc3nc+xLASDJZHsHubuRUiLbi7+npM+D
      2J+VYB+fJ2TPlACObSNay3DLiuzvFu+zLewRAZj8yb//LaryMWLRIN//xZfYe7Q8Kx0AABAO
      SURBVHOPfNqRPRICubioLN76hLKDn/v7bBt7pAQI8NL3/g6DQ5PEhk/4AvDZNvZICVDljZ98
      wo3bP+Ojdz7C3W1zfPYNe6QEiNCVqFLvfp5AMLZXVOuzB9gjvmSwNJ9jdX6ahuntdOjjsx3s
      kRJAIxANEEtlSLT5Wvc+e4s9IgADR8ny0ksvoaiaXwn22Tb2SAikEhAFfvSjH/HO5Uk/BPLZ
      NtpeAMK1ufrTS9iJQX7+576D5pp7SgBGvcpf/F//M3/22/8S13V22xyfz9H2AmhWl7kxb3Px
      iM6/+te/z+Dhw3uqF7hSzLM8dZ3NhTs0q7u78LDPF2n7OoAQFvNXP+KHxQCNWoVr1yYZ+va5
      9ldui47uPl7+e/8ETQ8Qjid32xyfz9H2Aggnxviv/7t/vttmfGVkRWXkmed22wyfh9D2Argf
      h0KuQiqT9FuCfJ4YYVRwazlEbRNR3cAtr3jntc29JgCXUrFM0hfAgUfYBtgGwjHArONW1xHV
      TURtA7e8jKiu41bWEdV1HKOCCTiygqwGMdQQZrgDPd67VwTgcP2Dd1nMV5HVIPHeHtKRR+83
      tXznJptVl5Hxw5SWp8hXBWPHJog+xU2XfbYPYRuIZsl71AuIyipu6yiqG7i1TYRRhmYJp1mi
      ikRNVqjLGiKcRkQyyKlh6D9PINZDKNFLINKJFO6gI5ggokeAPRMCNbg1VeDFl4/x2l/9mJ+8
      keBX/uaZh98umqxuNhmbGCGkw2S+ytjEBEF1d6rObm0TZ+UTJEUDRUXSIqAFQVaRtDBoYW9T
      aEkGJJBaD+TW2O/Wa5J073wnNpHeboTrgHDBsbycu1n2HLm6gVtaRFQ3ELVN3OombnUNxzFx
      HBvHtWgIl4qiU1KDVNQAZjiNlh5Hi/cSSA4SDqfpTPTRFcmgqEE0RUdTNGTp0b/5HhFAiHSs
      yV//+G3C2V4SHY/Zg8qxqJbyXL1ucerMYcqbea46k5w+d4awKnZ8WRR37l3sD34b127iujau
      3cSxmwjXQRUC1ZvrBmoQFA1JVj2BKAEkWQFFR1IDoGjec3fPVU9EqEFQwyArrffQW8/poATv
      vS+KhiQp3vnd4930JNlLR9FA1rz3+rIIB2E1wai0cu48NItQ3YDaGqK6jmiWEZU1RCOP4dg0
      JJmGLFOTFIqySk0LYQbimMlBpEgWKdRBKN5PNNpNMtRBb7iDVChFuJWDP/xLB9u1H2vyHhGA
      DQ7YapznLrxCT+rR44EcW+bE8xdwC0usruQ5/uK3EKu3WdlqMNEV2/FlUcSxX0AfewXhmLiu
      4x0dC9e1sawmpt2gYVTAbmKZNWyrjmvWccwatt3EMqsIq3U0ytjlKrZVxzGryEIQEIIALroQ
      KEKgIdCFQMNFE3fPhef0kuyJRpZBUj2ByZ99XvlUEFoISZJBDYEWRFKDnjAlGUkNIbWcUDS3
      cCtrnmNbdbAaCLOGaRtUZIWSrLIlK+RljS1ZpahokD2CGsnSkegnHu0iHusmE+1kIpIlqAYJ
      aSGCWuixOfjXZY8IQOP4+ecx33+TH/3ZW/zjv/9zj+wMkwNBSjOfkLdCnDk5zOz1y5RIcCa7
      O7sXSpKMFIgBfOlOvM9s4vlAmnYDwzapm1UaVgPDblI16xiOQb3lhIZtULdq2EYVxzawjQqu
      bWCbVYTdRHFtZMdEcixU10F2THCayI0tZAQB4aLeFZJwkYEALgHhzcxoSgoFWSUvq1S1EEak
      E6MjihtOk4xkyESydMd7GQqneS7WQzqSJqiGPvP97F44t0cEYLG0uMb4+e/xbCT82E4wSVIY
      PX6W0db14VPnn7aBT43HOUdICxPSwiRDX62TzXIsbNfGckxM28AVAtMxMB0T0zZbR09Mdavm
      iekzAgMIa2Ey0U5ORbJkop1EAzEiepRooH23SxVCYFQb7S8A17W4c/0KUzM3+fgPfsi3fvU3
      +N5zcb8ZdJvQFA1N0Qhpocff/ADubjq+F3Adl2alzubMKqvXFyjMb7S/AMz6Kn/0B3/J4Yvf
      4NREgAvnj+6ZYRAHgXZ3fuEK6ltVNqZWWLu5SHExhxrUyIx0c+aXv9n+AghGBvhn//yfsbG2
      yuXyCpfe+phXXzrti8DnoQjXpVFusH57idUbC5RWC4BE95F+zv7dF0gNZNDDASRJan8BIEno
      oSj9h8bpPzS+29Z8JSqbJUoreRI9HQQTEbTAozvxfL48wnWp5srk7qyxfG2e0mqBcCpK13gf
      E6+cIjWQeeBO9u0vgH1AdbPElR+9j+u4hBJhopk4qcEsqf4MsWyCYNyf5vlVcB2X8nqRtRuL
      bEyvUNksEYyG6D0xxLG/cZZYVxJX8UK0mm1hGc1WJd/BdBxcIZDEZ9rZfnhznpnC7o5Zf3Ws
      jxNdqaeezsbGBp2dnU89HfAqiq7t0CjVKSxsUlzcpLxWpF6sYjVNgvEI6aEsib406aFOArEQ
      ekh/YI7VzgghcIVAfObcFeLTcwRCgCtc3JbbGbaNI1wsx8W0bWzhYrUc1HZdHNfFdGwcIbAc
      59P7bYdSrkQlX8aWBI4sIQdU1FgQFzBdB8txkFt1FFnyltWU8OotMhJIfgmwI0iShKKpRDNx
      opk4g2e9BtpmtUFlfYvKRon8/DoLH05z488/Qg1oRNJxEr0ddAxkiXcliWYTyMrXq/lYjoNA
      YLsutuviugLL9RzNbTmYK7zXLcfBES6242K5TssRW0fXc1DHcbCFwLRtLNfBctx7zn0vDeG2
      HFngCC9Nu5WmADRZQZYkVFlGVWQUSfbOZRlFlpElCUVAZW0Lp2YgOwJFkkn1dDDQ14U62Iuu
      KuiKiiJJ6IqCIsvoioKmKKitHm1NkVElBUmi9by8R+oA+wAhBI4Q0MoBRSuXJKgRG8wQHczQ
      fW6ERtPAaBjkV/Ks3llh5c4CzZvTSEENLRIg0psiMZBBiQQwHLvlpALTdnBcB1u4mLbTcliB
      4di4dx3WdrxONQkQtKaVik+nl4pPr0TrjyJLqLLnSIokoaufOpmmqPecNBYIoCkKesvhZElC
      UxQCiooiS/c5oyLLBFrXsuQ5+L1c+V5uDa7tUl4tsHp9kc3JZaymSSyToGuij56jA4RTURTt
      67uvL4Ad4NbmBj+5M4XjulitnPRuzmi7LnbLkZVWMa3KMnJSQk7FUGQZtTX4TZUdpOI65mIT
      s1RHcUASAsWFaCpGrCNGMhltOapMQFWRWw5713kVWfacuuW8muKde/d596uKjK7srGsIITDr
      BqXVAms3l9icWcGsGaQGMoy/eJzO8V7Cye3vWPMFsAOkw2Ge6elDAnRFaTmmjKbIaLJyr0iW
      JRlJ4p4Q5HsPGVnCex2wGybNrRrl1SL5+Q1KKwVqUxtooRLBWIj0oS5SfWmS/Rmimfhuf/xH
      YjUtcndWWbk2T35uHbNukBnpZuTiUbom+gjGwl879HsUvgB2gM5ojM5obNveT4+phGNhOgay
      DJ33moYdyyE/t87Wcp7i4iZrt5Ywa00kWSLRk6JjsJNEb5pET4pANIS6S/MihBA0Kw0K8xus
      XJtnc3oVSZFJD2U58t3TdB8ZQAvpO9bB5gtgj3PXUVRdpetwH12H+wCwDYtGqUZlo0RhYZP8
      /Aaz791GCEE4FSXWmSDZmybZlyaSiRN6yk2xRrXB5vQqq7cWKcxt4FgOmdFuTv7ic6SHOwkl
      IrvSq+wLYJ+iBjRinUlinUl6jg8iXIFj2dQKVUoreQoLmyxfnWPqresI1yWcipIe7iLWmaBj
      sJNgPISqa185/BCui1FtkptdZ/nKLMWlHKqukRnt4ZkfXKRjMIsW1JF2eeNyXwAHAEmSkBQJ
      WdFJ9naQ7O1g6NlxhOvSrDQorRWp5soU5jbYnFrh2p9+iB7SiWYTJHo6SA93Ek7FiGZij+yb
      cB2X6maJ3Ow667eXKC7l0EI6neN9nL0wQWqws+16wX0BHGAkWSaUiBBKRGACxDeOYhsWRq3p
      9U3MrbO1kmf+g0lvSEo4QCybIDWQJdmXJj3ciSRL1LdqrN5YYO3mEpWNLRRNpff4IOMvnSDe
      nUIPB3b7oz4UXwA+95AkCS2oowV1ouk4PUcHgFbOnitRWilQXMqxfHWOO+/exGpaBGMhmuU6
      4Y4YnWM9HHv1LKn+9J7pxfYF4PNYZEUm3pUi3pVi4MworuPQrDSpFyrUChVinQlinUm04M5M
      Md1OfAH4fGlkRSGcjBBORsiMdO+2OV+L+wQQk1zS8u6uYOw2ahSLTz+dRqNBcScS8mlr7hsN
      atve2JGDQD6fJ51O70haOz1t0HEclB2KwV3XRZZ3ZnqSbduo6vYGLfe923a/eTuzk8ui7CRC
      CGRZ3pe/pSRJaNr2NqP6Mwv3ITuV++80T0PUvgAehnCYuX6Zt975KcXapyvIuVaDxdV1mrUa
      tmvTtO6uPmaxtpZ/4FtZlU3eeON1Lr3/CQ3rQSGmoFGr4doGTVuAa1OrG1/JbKk1kO7p0OSD
      N97gjbffJV8xyC/P8NZbb7NSqNEobXL19uxTStfjq36uGx+8S8lyEVaZNy99fN9r+6+c3C7c
      KgubDhcvnELILrO3rlERYY4MpckVS6iNBkLa4v3bBc6ff46+tMr85A3W890cGe2mYQcJU8cK
      xFAaDQZPPEuktMr61hYit4Qd6eJQV5QbN26RHZrA3srhVmf4WS7BS2eGKFVlOo0tJufWOXz8
      GI3cCksbRYYPHyMZ3q3eVJNo5xineyWurazibBW58I2LuI7L+sIcW/kmNofaz6mkGnOzOXq1
      PLlalXq1jKSFsWplvwR4KEqcZyYyvPfOe+SrFQoVyIg8s0WvNCjk88RSGYZGxskmvDV19HCS
      npDBzEaN+ZkpZhcW8aakOlz78F2uzq+hFuYpBrox1hdYWp5hueCtEVrMF8l0djE0eph4wCZX
      LHNjaoHh4W6uXb3GwuI6vV1Z1tfWdu87ARYnr/DWh7dIpTQULeVNhFFhfbPKQNRgevOrlVxP
      EyXSi9RcJVe36UqEKG6ssFVtsjIz6wvgodgNVnNVUokgjaZFbSvHcqFBRP+0GFYDISqby5Rq
      3o9u1EosbZQIhyJ0aFVyVpiAIgMKJ569yHdeeZFMR4LKxjJbDYtwrJNMxGF6dhkAPRQltzRH
      zbBBktGwWFxcRguGiMRTJGJxVHV3twgcOHyKb3/n2wx39iJbK1y5do2FpUXKtQZFR6cwP7Or
      9j0YiYzWJO/G0RXQVYn5mUkWN4r3N4MeJB47KV64VMpbmK5CMqFy5aM7DE8cIhkNYdoOkitQ
      AxrV0hZKMEYkqFDZ2sJCJREP8tHblxg89TzdyRDCtrAlBU2RAUG5WEBoIaJBlWKxRCSeQhYO
      ekBlq7BFOBZDCBkFk1KlQSKVQjgOmqpgO862t4Q8OS6m6aK35hI4VpNiqUokFkWRdTRVwjBN
      goH2GvtjmiaKJLCEAq5DQJMpbpXQ9LAvAJ+DjR8C+RxofAH4HGh8AfgcaHwB+BxofAH4HGh8
      AfgcaP5/vVS+T9p7CQEAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
